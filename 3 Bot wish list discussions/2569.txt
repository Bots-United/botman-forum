--------------------------------------------------
Subject: bsp_*
--------------------------------------------------
12/16/01 at 13:26:07  Posted by: philippecr (philippecr@free.fr)
--------------------------------------------------
On the wish list for BSP view it would be nice to display the name of the texture in the middle of the window

About bsp_tool, there may be a bug in print_nodes(), printing child 0 instead of child 1 in some cases

Congratulations for your work

--------------------------------------------------
12/17/01 at 04:16:45  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
I'll look into adding a command to display the texture name directly in front of the viewer.  I don't think this would be too difficult using a traceline to find the first blockable brush, then using that plane to determine which texture is assigned to it.

botman

--------------------------------------------------
12/29/01 at 12:51:17  Reply by: Zipster (skyork99@juno.com)
--------------------------------------------------
Botman, since you need to have the geometry information in order to render the map, how big a jump would it be to develop a BSP decompiler?

--------------------------------------------------
12/30/01 at 05:16:56  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
There already is a BSP decompiler called WinBSPC...

http://botepidemic.com/gladiator/download.shtml

botman

--------------------------------------------------
12/31/01 at 18:00:17  Reply by: Zipster (skyork99@juno.com)
--------------------------------------------------
No no, I know about that one, but as we all know, once the map is decompiled it contains invalid brushes, etc., and is pretty much mangled and unrepairable.  I was thinking of one that is more accurate at rebuiding the map.

--------------------------------------------------
01/01/02 at 05:37:11  Reply by: Cheesemonster!!! (paul.murphy@ntlworld.com)
--------------------------------------------------
I'm afraid that's the best you'll get from a decompiler.

--------------------------------------------------
01/02/02 at 12:32:40  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
I updated my BSP tools and added the feature that Phililippe ask about (displaying the name of the texture pointed to by the crosshairs).

It was a lot more difficult than I thought it was going to be to find the surface where a traceline hit.  I can get the BSP plane pretty easily, but in most cases there are several surfaces (textures) all lying on the same plane, so you have to determine what the intersection point is on the plane then find the only surface that contains that point.  The solution I used was to find the angle between 2 vertexes and the intersection point.  If you add together all the possible angles (from all vertexes in the surface) you should get 360 degrees if the point lies inside that polygon.  It took me a while to find a generic "point lies inside an N sided polygon" routine to get this working properly.

botman

[modified on 01/02/02 at 12:32:40]
--------------------------------------------------
01/13/02 at 12:51:11  Reply by: Tub (tubpc@authmann.de)
--------------------------------------------------
About the "point inside the polygon". If you travel a polygon border clockwise and see if the point is either left of every edge or right of them you have the same result, without any inaccuracies (I doubt you'll ever have 360.00°)

I needed that to detect if 2 polygons, when dropped to the ground (=> ignoring z coordinate), are touching each other. I think it's best to find out if a) some edges cross each other or b) at least one point of one polygon is inside the other. (If you know a better algo for that, please let me know)


About a decompiler: I just need to process entity information, and I might output the whole map back to a .map file (anybody has information about the structure of .map ?)

I'm actually trying to create a working autowaypointer, but if you want a decompiler I think that's possible.

[modified on 01/13/02 at 12:51:11]
