--------------------------------------------------
Subject: heap search
--------------------------------------------------
05/26/03 at 10:58:08  Posted by: PM (pm@racc-ai.com)
--------------------------------------------------
Does anyone know a fast and convenient algorithm to search for an element through a binary heap ?

The heap is a binary tree stored in a flat array ; the rules are :
child_index = (parent_index * 2) + 1
parent_index = (child_index - 1) / 2

+1 and -1 because the start index is 0 and not 1 (not to lose a cell in the array).

I hope I don't have to blindly rush all along the array ???


--------------------------------------------------
05/26/03 at 11:07:04  Reply by: PM (pm@racc-ai.com)
--------------------------------------------------
Nvm, forget it.
Stupid me.

I had forgotten there can't be no "gap" in a heap. So the blind search method may still be the fastest.

I'll finally get a working pathfinder this time ! w00t !


--------------------------------------------------
05/26/03 at 12:27:31  Reply by: @$3.1415rin (johannes@_-removeifnotavirus-_lampel.net)
--------------------------------------------------
if you are just working on A*, I suggest you should do some hashing

oh stupid me, who said you were doing A* stuff ;)


edit : haha, gotta show my log files :D

I benchmarked my pathfinder with and without hashing ... on a 559 waypoint de_dust mesh, calculating paths from each waypoint to another. Average pathfinding time without hashing is 247us, with hashing it's apprx. 126us

the logs :-D :
without hashing : http://johannes.lampel.net/botmansf/log-nh.html
with hashing : http://johannes.lampel.net/botmansf/log-wh.html

[modified on 05/26/03 at 12:27:31]
--------------------------------------------------
05/26/03 at 13:04:47  Reply by: PM (pm@racc-ai.com)
--------------------------------------------------
*lookstupid* the fact is that I dunno how to "do some hashing" *lookstupid*
lol


--------------------------------------------------
05/26/03 at 13:55:06  Reply by: @$3.1415rin (johannes@_-removeifnotavirus-_lampel.net)
--------------------------------------------------
like in my pqueue implementation for A* I sent you ... use an array for all waypoints and store there the index where a certain waypoint is in your heap. this way you can just look up the index for the heap. Looking if some waypoint is already in the open or close list is quite a bit faster than looping thru all items

--------------------------------------------------
05/26/03 at 15:54:12  Reply by: PM (pm@racc-ai.com)
--------------------------------------------------
Problem solved in another way: I completely got rid of the closed list ;D
now 2 boolean flags tells me which list each node belongs to, everything is kept in a flat array and the binary heap that I use for the open list stores only pointers to this array.

I can hardly imagine faster ;D
yeeppee *jumps up and down* *bounce on walls*


