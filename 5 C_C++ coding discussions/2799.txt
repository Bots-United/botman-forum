--------------------------------------------------
Subject: Need claification on source/compile in linux
--------------------------------------------------
03/02/02 at 15:13:16  Posted by: Raven (bena2@geobind.net)
--------------------------------------------------
I could not find the answers to the following questions so I will ask them here. (I looked for several hours...)

I do not want to "create" my own bot program.  Or even majorly modify HPB_bots.  I know someone that uses HPB_bots mod.  He was thinking of some small changes (at least we think they are small) to allow more flexablility with bot configurations (names, type ...etc).  So what I want to deal with is just the actually code for the mod HPB_bots.  With that in mind I will actually get to my questions.

1> What is the difference between the template code and the source code (hpb_bot_src_*_*.zip and hpb_bot_template_*.zip)

2> Is there or does someone have a "guide" to getting hpb_bot src to compile under linux (I think I can get the template to compile...I just need the linux dedicated server files).  However I run into some undeclared identifier (using the supplied Makefile) when I try to compile the src files.

Raven


--------------------------------------------------
03/02/02 at 16:59:49  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
The biggest difference between the HPB bot template source code and the HPB bot 1.8a source code is that I stripped all the waypoint following code out of the template version (to encourage people to create their own waypoint following code and not just cut-and-paste my code).

There are also a few minor bug fixes as well as some additional mods that are handled (like DMC).

What you can do if you really want to compare them is to download www.scootersoftware.com/BeyondCompare and install both the HPB bot template source code and the HPB bot 1.8a source code (in different directories obviously), then use BeyondCompare to diff the sources.

There isn't really a tutorial for making the Linux version, just make SURE you FTP the files to your Linux box in ASCII mode (not BINARY mode) so that the CR/LF will get converted to newline.

Once you have the files on your Linux box (using the same directory structure as on the Windows machine), just change to the "dlls" directory and run "make" (without the quotes) to build the shared library .so file.

You'll need to have the GNU C++ compiler installed on your Linux machine before you can build anything, so you'll have to see your Linux documentation on how to do that.

botman

--------------------------------------------------
03/02/02 at 17:14:27  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
P.S. Also make SURE you are using an older version of the gcc compiler.  I'm using gcc version 2.91.66 (egcs-1.1.2 release).

The newer version of the gcc compiler will give you errors when trying to build the HPB bot source code (or the Half-Life SDK source code).

botman

--------------------------------------------------
03/02/02 at 17:34:54  Reply by: BAStumm (bs@bs-linux.com)
--------------------------------------------------
[root@idslppp12 book]# gcc -v
Reading specs from /usr/lib/gcc-lib/i386-redhat-linux/2.96/specs
gcc version 2.96 20000731 (Red Hat Linux 7.1 2.96-98)

Hmm, guessing that won't work eh? 

--------------------------------------------------
03/02/02 at 17:46:58  Reply by: Raven (bena2@geobind.net)
--------------------------------------------------
First off thanks for the quick reply.  I understand and appreciate the time you take/took to help me/others out.

I transfered the files using samba so the data is fine and I ran the dos2unix command on all the files.  (even though I am pretty sure that it just causes gcc to spit and hiss alot but would still compile...at least that has be my experience)

* on a side note I wish I had know about that command (dos2unix) about 6 months ago it would have saved me a lot of time filtering though compiler output.

I just read your other post.  I am using a newer gcc compiler (ver. 2.96).  So that is most likely the problem.  I don't think I am willing to downgrade right now...maybe I figure out a way to have two different gcc versions...

However, in case I ever do get older version of gcc installed or you/someone gets it to work in newer gcc, I will ask another questions.

Do you have to have the other mods (i.e. tfc) installed for the HPB_bot src code to compile? 



thanks 
Ben Anderson



--------------------------------------------------
03/03/02 at 05:05:34  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
No, the HPB bot code is completely self contained.  You don't need any files from the Half-Life SDK or anything else except what's included in the HPB bot source code .zip file.

botman

--------------------------------------------------
03/04/02 at 07:45:43  Reply by: BAStumm (bs@bs-linux.com)
--------------------------------------------------
Ok so Ben managed to get your source to compile with gcc version mentioned earlier. It's from your 1.8a source but when he compiled the .so file is approx 60k smaller. It's currently running on my server and seems fine, don't notice any problems but concerned about size diff...

--------------------------------------------------
03/04/02 at 07:53:47  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
You may be building the Linux version with smaller libraries than I am.  As long as all the source code compiles and links fine and the .so file runs, I wouldn't worry too much about the size difference.

botman

--------------------------------------------------
03/04/02 at 08:12:19  Reply by: BAStumm (bs@bs-linux.com)
--------------------------------------------------
Hey thanks for the quick reply.

Ben wanted to make sure it could compile before modifying anything and the size difference concerned me. 

I'll ask Ben to let you know what he needed to do to get it to work with the newer gcc compiler.

--------------------------------------------------
03/06/02 at 23:06:57  Reply by: Raven (bena2@geobind.net)
--------------------------------------------------
Here is what I have done to get HPB_bots to compile.

->Added <unistd.h> to bot.cpp

  --sleep function undeclared

->Added <unistd.h> to waypoint.cpp
  
  --access function undeclared
  --close function undeclared
  --unlike function undeclared

->Added Void return type for function in h_exports.cpp
  --GiveFnptrsToDll with no ruturn type


thanks 
Ben Anderson

