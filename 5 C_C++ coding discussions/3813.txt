--------------------------------------------------
Subject: Question About Monster Coding
--------------------------------------------------
11/04/02 at 14:14:28  Posted by: MrSatan (MrSatan@Comcast.net)
--------------------------------------------------
First of all -- I am a porgramming n00b (When It Comes To C/C++ That Is).

Anyways, I have been trying to find the part of the code that determines how often a SCIENTIST will heal a player (Example: Someone gets healed and someone else needs healing but they have to wait). Also, is there something in the code that determines how fast the APACHE HELICOPTER goes up/spins? I really wanna be able to mess with that code. BTW What do you use to compile cuz I use CodeWarrior.

--------------------------------------------------
11/04/02 at 15:03:27  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
Last question first.  The Monster plugin was compiled with Microsoft Visual C++, which is what Valve uses for the Half-Life SDK and the only officially supported compiler.  I have patches available so that you can build the SDK 2.2 source code using the freely available Borland command line compiler or the freely available MinGW compiler.  To the best of my knowledge, no one has managed to successfully build the Half-Life SDK using any other C++ compiler (probably mostly due to not trying hard enough to overcome Microsoft compiler specific code that can be pretty hairy and getting function names exported properly from the DLL so that the engine will find them correctly).  See here for the SDK patches...

http://planethalflife.com/botman/building.shtml

All of the monster code in Half-Life uses schedules (which are fancy state machines) to handle the AI states.  Monsters start in an IDLE state and will change to another state based on what they hear, see, smell, or feel (for damage).  Much of the AI state code is shared between all monsters.  This code can be found in the AI_BaseNPC_Schedule.cpp file.  Stuff that is monster specific will be found in the .cpp file for that particular monster (for example the scientist code is found in scientist.cpp, but don't expect ALL scientist code to be found in scientist.cpp, some of it is in AI_BaseNPC_Schedule.cpp).

Constants for movement speed, turning speed, attack frequency, etc. are usually found in the .h or .cpp file for a particular monster.  Look for things like "pitchspeed" or "yawspeed" to find the places where turning speed for the pitch or yaw are specified.

botman

