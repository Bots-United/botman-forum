--------------------------------------------------
Subject: Set crosshair!
--------------------------------------------------
06/06/02 at 05:38:31  Posted by: Ejo (erika_annestrand@hotmail.com)
--------------------------------------------------
Hi! 
I would like to set the crosshair at coordinates that I decide. I tried SET_CROSSHAIRANGLE(...), that I´ve found in Player.cpp in hl.dll. But it seems like you only can set the crosshair inside an area in the middle of the screen. And I don´t know how to convert my coordinates to the variables that I should send to SET_CROSSHAIRANGLE(...). Is there another way to set the crosshair? 

Thanks! 

--------------------------------------------------
06/06/02 at 09:02:18  Reply by: PM (baty.pm@libertysurf.fr)
--------------------------------------------------
UTIL_VecToAngles() ?


--------------------------------------------------
06/06/02 at 12:50:16  Reply by: Jedi_Master (jimhunterjr@bellsouth.net)
--------------------------------------------------
You may have to draw your own crosshair either with a sprite or TriAPI, depending on your goal.

--------------------------------------------------
06/12/02 at 04:52:20  Reply by: Ejo (erika_annestrand@hotmail.com)
--------------------------------------------------
If I draw my own crosshair, how do I set the coordinates for it? I don´t want it to be in the middle of the screen as it is today. I want to send coordinates from an input-device, to set the crosshair. So that I will be able to aim in another direction than in the middle of the screen.

--------------------------------------------------
06/12/02 at 11:25:43  Reply by: Entropy (half_life_jedi@bellsouth.net)
--------------------------------------------------
2 options:
1.  Draw your crosshair using screen coordinates
2.  Draw it using world coordinates, for example 10 units or so in front of the player.

The disadvantage of using screen coordinates are that players' resolutions may be different and you have to somehow convert that screen coordinate back to an offset to the view angles in order to aim.  The advantage is it's then fairly easy to draw a sprite at those coordinates.  See the Draw() functions for most of the HUD classes - for example, the health indicator in health.cpp in the cl_dll folder.

The advantage of using world coordinates is you could project a line out x units from the player in a specific direction (angles) and then draw your crosshair at that point in 3D space - it might look better and make the crosshair be more accurate. (Might look worse, don't know.)  Or you could take your coordinates from your device and project them on a plane x units in front of the player, which would allow you to calculate the firing direction by taking the difference between the crosshair coordinates and the player's origin.  There are examples of how to draw triangles with TriAPI in tri.cpp in the cl_dll folder.  You could get the player's origin and angles using gEngfuncs.GetLocalPLayer().

