--------------------------------------------------
Subject: Terminating Timers
--------------------------------------------------
01/10/03 at 12:51:45  Posted by: Phreak (dead_sexy_simon@hotmail.com)
--------------------------------------------------
Hello everyone,


I am using Timers to perform events and i was wondering how i can give a float a NULL value. Not NULL as in Zero (0) but nothing, zilch.

when i have

code:


if ( send_message < gpGlobals->time )
{
   //send message stuff here
   send_message = NULL; 
}




The message keeps on repeating, because NULL is less than the map time.

How can i set the timer to a nice value, so it is re-assignable later on to start again?


Thanks in advance


Simon


--------------------------------------------------
01/10/03 at 16:53:48  Reply by: Cheesemonster!!! (paul.murphy@ntlworld.com)
--------------------------------------------------
You would need to use a pointer in that case.

Instead you could use a boolean to make sure the message has/hasnt already been sent.

e.g.

code:

bool msg_sent = FALSE;

if ( !msg_sent && (send_message < gpGlobals->time) )
{
  //send message stuff here
  msg_sent = TRUE;
}




or alternitvly if you can have a zero value for the float value you can just make it so, when send message is a particular value dont send the message anymore.

code:


if ( (send_message != 0) && (send_message < gpGlobals->time) )
{
  //send message stuff here
  send_message = 0; 
}





[modified on 01/10/03 at 16:53:48]
--------------------------------------------------
01/10/03 at 13:36:11  Reply by: Phreak (dead_sexy_simon@hotmail.com)
--------------------------------------------------
Thanks CM, i wasn't sure if something like that would do.

Works great, thanks again


Simon

--------------------------------------------------
01/11/03 at 05:30:59  Reply by: cycloid (mail@cycloid.biz)
--------------------------------------------------
do this:

float f_send = -1.0;

and then:

f_send = gpGlobals->time + THE_TIME_IN_THE_FUTURE;

and then:

if( f_send > 0.0 && f_send < gpGlobals->time )
{
  SEND IT
  f_send = -1.0;
}




