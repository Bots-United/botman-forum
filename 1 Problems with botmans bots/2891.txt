--------------------------------------------------
Subject: BotMixer5000 Bug/Limitation.
--------------------------------------------------
03/24/02 at 18:13:11  Posted by: Cheesemonster!!! (paul.murphy@ntlworld.com)
--------------------------------------------------
Hey botman, you were asking me about my bot and hpb_bot working with botmixer, well whilst I was testing it I noticed some weird thing.

I'm using the "September 29th, 2001 (Release 4.0)" Version of BotMixer (the latest?)

And while testing my bots couldn't pick up the messages that HPB_Bot were saying (SayText messages was what I was checking for)

My botmixer.cfg looked something like this

dlls\dmc_botmixer.dll
hpb dlls\HPB_bot.dll
rcb dlls\rcbot.dll

But I came up with a radical idea and switch the places for my bot for hpb_bot to look like this...

dlls\dmc_botmixer.dll
rcb dlls\rcbot.dll
hpb dlls\HPB_bot.dll

Then I tested again, and my bots could pick up HPB_Bot messages fine.

I'm guessing that the first dlls found have a higher priority or something? Is it easy so they can have an equal priority? ... Or do you know what I'm talking about??!! ;D

--------------------------------------------------
03/25/02 at 04:07:47  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
Yes, the order will matter.

The bot DLLs are chained in sequence (in reverse order of the way they appear in the config file).  As you already know, when the game DLL calls an engine function (like printing text on the HUD), the bot DLL intercepts this message and handles it (if necessary) then passes the request along to the engine.  This means if you have more than one bot DLL loaded, like this...

engine <- bot1 <- bot2 <- bot3 <- game

...that when the game generates messages, all bots will see them.  When bot3 generates messages, only bot2 and bot1 will see them.  When bot2 generates messages only bot1 will see them, etc.

You can't have messages generated by 1 bot intercepted by all of the other bots (at least not with the way the current BotMixer is written you can't).  I'm not sure it would possible to modify things to make messages generated by one bot to be seen by all others (because of potential recursive problems with bots calling engine functions).

botman

--------------------------------------------------
03/25/02 at 06:48:40  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
P.S. If you use the "say" or "sayteam" command (via FakeClientCommand), then the MOD will issue these text messages and all bot DLLs will see this text.  The HPB bot source code issues the text messages directly by using the engine functions (which is what you don't want to do).

botman

--------------------------------------------------
03/25/02 at 08:17:24  Reply by: Cheesemonster!!! (paul.murphy@ntlworld.com)
--------------------------------------------------
I'm using UTIL_HostSay to make bots say messages :)

--------------------------------------------------
03/25/02 at 08:58:07  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
Yes, that's the problem.  You are sending them directly to the engine.  Send them to the game DLL instead (using "say" or "sayteam") and the game DLL will send these through all the bot DLLs.

Unfortunetly you can't change what other bot authors do, so you can't force them to behave the same way (i.e. send say messages through the game DLL instead of directly to the engine), but if you are only using your bot with another bot, just make sure your bot is first in the botmixer5000.cfg file (that way your messages get sent to the other bot DLL via the game DLL and the other bot's messages get sent to your bot DLL via the BotMixer bot DLL chaining).

botman

--------------------------------------------------
03/25/02 at 12:08:17  Reply by: Cheesemonster!!! (paul.murphy@ntlworld.com)
--------------------------------------------------
Will the bot still pickup say/say_team messages from the engine if I use FakeClientComamnd of "say" and "say_team" ?

--------------------------------------------------
03/25/02 at 12:29:23  Reply by: PM (baty.pm@libertysurf.fr)
--------------------------------------------------
I guess yes, you should even be able to make other bots talk this way.

--------------------------------------------------
03/25/02 at 13:28:52  Reply by: Cheesemonster!!! (paul.murphy@ntlworld.com)
--------------------------------------------------
I tried it there using fakeclientcommand, but I have a problem, whenever the bots talk they also say "say" !!

So if they want to say hello they would say

"say hello"

But the fakeclientcommand call is just like this

FakeClientCommand(pEdict,"say",pBot->chat_line,NULL);

where chat_line is the message (.e.g "hello")

Any ideas?!!!

--------------------------------------------------
03/25/02 at 14:23:51  Reply by: PM (baty.pm@libertysurf.fr)
--------------------------------------------------
LOL! I noticed exactly the same problem with my code and I was thinking I was the only one! Now I'm reassured: if there's a bug, I'm not guilty !! Yeeppee...

--------------------------------------------------
03/25/02 at 16:03:13  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
The config.cfg file for Counter-Strike uses "messagemode" and "messagemode2" (not "say" and "sayteam").

Different MODs will use different commands for similar functions.  Always check the config.cfg file to see what you should use for the FakeClientCommand() for any particular MOD.

botman

--------------------------------------------------
03/25/02 at 17:03:27  Reply by: Cheesemonster!!! (paul.murphy@ntlworld.com)
--------------------------------------------------
I am sure that say/say_team are the actual commands and messagemode/messagemode2 is for typing in what you want to say whilst playing. This is the same with quake.

Although I'll try with message mode. This may require a '\n' character as the last character of the message though.

