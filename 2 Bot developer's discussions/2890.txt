--------------------------------------------------
Subject: Debugging HPB_Bot.dll
--------------------------------------------------
03/24/02 at 16:19:33  Posted by: inkdust (inkdust@hotmail.com)
--------------------------------------------------
I just downloaded the HPB_Bot template source code to play around with.  The code builds and runs fine with VC++.Net.  Now I want to insert breakpoints and have HL break into the debugger during execution.  The problem is that the game automatically terminates if I have the debugger attach (without breaking..just attaching will cause the game exit).  I looked into the client messages that HPBBot outputs.  If I run HL:CS with the debugger instead of without, I get "ClientDisconnect: 1b0a1ac" instead of "ClientCommand: VModEnable 0"

Does anyone know what causes this?  Is there a workaround?  How do you guys debug your bots?


--------------------------------------------------
03/24/02 at 16:30:23  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
Here's the thread you want...

http://dynamic.gamespy.com/~botman/yabb/YaBB.pl?board=2&action=display&num=1330

botman

--------------------------------------------------
03/26/02 at 00:23:00  Reply by: CountFloyd (countfloyd@botepidemic.com)
--------------------------------------------------
Another alternative would be to remove the debugger check from the client.dll. It's just a simple call to kernel32 IsDebuggerPresent().

--------------------------------------------------
03/26/02 at 00:25:20  Reply by: PM (baty.pm@libertysurf.fr)
--------------------------------------------------
I'm interested in knowing how you would do that !



--------------------------------------------------
03/26/02 at 00:51:24  Reply by: CountFloyd (countfloyd@botepidemic.com)
--------------------------------------------------
(this might be illegal in some countries)

Anyway, first you need a decent debugger where you can put Breakpoints on API Functions. My debugger of choice is Softice -> http://www.numega.com

Equipped with that you can just put a breakpoint on IsDebuggerPresent() and *kablam* CS will break into it. After that you just need to step out that function and you know where in the code this function will get called. Write down the Offset and Bytes and modify (uh oh Assembly!) the branches to your needs (with a good HexEditor like HIEW where you can assemble new commands).

--------------------------------------------------
04/21/02 at 23:57:19  Reply by: inkdust (inkdust@hotmail.com)
--------------------------------------------------
How to carry out Count Floyd's suggestion:

Find 85 c0 74 0e 8b 44 24 20 50 in client.dll.  Replace 74 with eb.

This removes the debugging check.  Use at your own risk.  I don't know what would happen if you play online with modified client.dll (do anti-cheating programs detect this??)

--------------------------------------------------
04/22/02 at 02:36:56  Reply by: Onslaught (freedombot@yahoo.com)
--------------------------------------------------
Hey it works! Thanks Count and kevin

