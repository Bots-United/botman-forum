--------------------------------------------------
Subject: Dummies guide to creating a bot...
--------------------------------------------------
02/12/01 at 05:09:46  Posted by: botman (botman@mailandnews.com)
--------------------------------------------------
I saw this on www.planethalflife.com yesterday...

http://www.planethalflife.com/csbots/features/programming/

The CSbots site at planethalflife has started a "CS bot programming for dummies" series.

It will be interesting to see how accurate these tutorials really are.  I find it interesting that someone who has never created a bot would write a tutorial explaining how to create a bot using language that non-programmers would understand.  It will also be interesting to see how far (and how detailed) these tutorials go.  Several other web sites have started Half-Life bot programming tutorials (Half-Life Programming Planet for one) but after 1 or 2 tutorials they usually loose interest and move on to something else.

Does anyone else have any thoughts about this article?

botman

--------------------------------------------------
02/12/01 at 05:16:26  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
Oh, I forgot to mention this.  Does anyone else interpret this statement the way I did?

QUOTE:
This made botman sit up and take note (I’m sure everyone knows botman so I won't go into details) and he set to work on his open source HPB_Bot that we all know and love.



To me it sounds like Android was created first and that made me want to create the HPB bot.  Which, of course, is backwards.  See the old news on my web page for July 31st, 2000...

http://planethalflife.com/botman/old_news.shtml

Like I said, it will be interesting to see how accurate these tutorials are.

botman

--------------------------------------------------
02/12/01 at 05:31:43  Reply by: Shogun (mage@space.com)
--------------------------------------------------
he has released a template of his code that anyone is free to use to make their own CS bots – which many people have done, including me *g*. 

seems like he has made a bot after all.

As far as I know this has only been possible since SDK 2.0 was released and so that’s why it has been such a long time in coming.(concerning dll hooking)

Is this true?

--------------------------------------------------
02/12/01 at 05:38:27  Reply by: Shogun (mage@space.com)
--------------------------------------------------
To get it to work simply compile the dll using Microsoft Visual C++ 6.0 

BAD,I do not want to use MS VC++ 6.0
I use mingw32 it works fine for me and it is free.

--------------------------------------------------
02/12/01 at 08:01:58  Reply by: William (william@botepidemic.com)
--------------------------------------------------
My cynical view on tutorials, based on some 5 years in the various gaming communities (and on trying to write some tutorials myself), is that:
- most tutorials don't reach issue number 4
- especially those tutorials that are unable to tell what will be in the next issues are doomed.

What Faultered could do is to port several bot AI tutorials for other engines to CS. (Notably the forty-something tutorials by Coffee for Quake1: http://www.planetquake.com/minion/tutorial/main.htm ). However, most people prefer to think Half-Life is the first game that features decent AI and decent bots...

Please prove me wrong.

William

--------------------------------------------------
02/12/01 at 09:27:15  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
"As far as I know this has only been possible since SDK 2.0 was released and so that’s why it has been such a long time in coming.(concerning dll hooking)"

No, this is a false statement, but as least he said "As far as I know", which was correct.

Bots for TFC, CS, or other MODs was also possible with the SDK 1.0 code (which is what I started with back in January/February 2000 for the HPB bot).  I built a bot for TFC using SDK 1.0 and the 1.0.1.6 Half-Life engine.  When Valve released the 1.1.0.0 Half-Life engine, I wasn't sure if the TFC bot would even work anymore or not (see the old news from early July, 2000).  It turns out that Valve changed very little between 1.0.1.6 and 1.1.0.0 as far as the bots were concerned.  Some new entities were added but that's about all that changed.  Bigger problems were encountered in the 1.1.0.4 release where Valve added a new structure for engine functions and TFC bots would crash without this change (so the the Admin MOD).

William: I'm not sure that most people think Half-Life is the first FPS to support good bot AI.  Many people may never have realised that bots existed for Quake I/II because they may never have played Quake I/II.  Since Counter-Strike made the Half-Life engine so popular I think this has focused more attention on the Half-Life bots (although most of the focus seems to be on CS and not TFC, Action Half-Life, Firearms, FLF, etc.)  Since Quake III came complete with bots, less development effort seems to have been spent on creating bots for Quake III (people just seem to tweak the original bot settings).  I wonder if anyone would have bothered to create a bot for Half-Life if Valve had supplied a bot along with the TFC and SDK releases 2 years ago.

botman

--------------------------------------------------
02/12/01 at 11:41:28  Reply by: William (william@botepidemic.com)
--------------------------------------------------
Going OT:
There are two reasons for the limited popularity of UT and Q3A for bot development:

First: the bots are that good that you'd need to work for several months to do it better;

Second: for various reasons (intellectual property, performance), both UT and Q3A hide part of their AI implementation in the engine. Specifically, in both cases, you do not have access to path finding. In the discussions in this message board, you can read how much time that saves, but also how many options that removes.

The (unexpected?) result is that for certain CS style mods (UT Strike Force, Q3A Urban Terror) the AI available isn't up to par with Q2 and HL bots, IMO.

Wrt HL bot support: Valve, for whatever reason, goofed big time on that. Whereas Quake2, Quake3, and UT shipped an SDK within weeks of releasing the game, Valve didn't. At the time Half-Life was released, some 10 experienced Q2 developers were waiting to get their hands on source code.
Even after finally releasing the source code, some 4 to 5 months later, the HL engine proved to contain some serious bugs, making useful bots impossible (they couldn't turn, for example). It didn't help that Valve didn't inform the community about these bugs (whereas Epic and Id tended to publish known bugs/issues).
Many bot developers grew impatient, because at that time the Valve "mod support" seemed primarily targeted at the press, rather than bot developers. 
Only after seven months, bot development for HL became feasible. By that time, most of the Q2 developers had moved on, to KingPin, back to Q2, to a job at game company, etc.

Basically, that explains the slow start of HL bot development, and the large number of "rookies", fresh blood and fresh ideas here (a good thing). But what if Valve ...

William

--------------------------------------------------
02/12/01 at 11:44:36  Reply by: GeorgeDaws (georgedaws@hotmail.com)
--------------------------------------------------
I think it's good for newbies though

--------------------------------------------------
02/13/01 at 03:09:23  Reply by: bigjesus (holybigjesus@hotmail.com)
--------------------------------------------------
Damn it!! I am making a dod bot i got the sucker to join the game and they just wont join a team ive been up working on this for about 70 hours now plz help!!!??!!! also how do i display the information about the weapons and entities that arent in world craft to put into the bot code ive made some up but it all im allowed now is a knife and i cant use the guns for my classes... other then that they join a team just not a class

--------------------------------------------------
02/13/01 at 05:01:37  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
holybig, when you post a reply in a thread, please keep the post on topic with the thread.  I've noticed several times that you post messages that are totally unrelated to a thread.  If you have a question or a problem, START A NEW THREAD!

If you continue posting off topic replies in the future, I'll just start deleting them.  It's very confusing when people start talking about 2 or 3 completely different things in the same thread.  If YaBB has a function to move a reply to a separate new thread then I would do that, but I can't.  So in the future please stay on topic or post your messages in a new thread.

botman

--------------------------------------------------
02/13/01 at 07:22:28  Reply by: bigjesus (holybigjesus@hotmail.com)
--------------------------------------------------
LOL! sorry bout that botman. I am a little crack head short and stout this is my crack pipe this is my oh shiesh I forgot what we were talking about...

--------------------------------------------------
02/13/01 at 08:06:03  Reply by: FaulTereD (faultered@planethalflife.com)
--------------------------------------------------
Hi, I got an email about this thread so i thought i'd check it out. I just read through and thought i'd clarify a few points with you all. First, the tutorials are a "dummies" guide, they will be for complete newbies, not for experienced bot programmers like botman etc. I want to give normal players the chance to learn how the bots work and what's involved. With the hope that more people can understand them and maybe contribute to the community as a whole with some new found knowledge. If i teach one person to understand bot's more i will be happy.

As i said in the tut, it's gonna contain a lot of theory. Not just code. I've done a hell of a lot of theory on AI at university and i wanted to share with people what i know and apply it to something i love. This isn't a scientific paper on bot programming, it's something i was asked to do because of my knowledge of theory, i am by no means an expert in CS Bots like many of you here but i know a fair share that many newbies don't and i feel i can explain it to them in an easy to understand way.

I don't know if the posts above are insinuating bad things about the work i've done, i can't tell from reading them but i just wanted to clear up a few points before they become that - if they do. :)

Anyway, feedback is always welcome, good OR bad.

FaulTereD







--------------------------------------------------
02/13/01 at 20:14:48  Reply by: scary_man (scary_man@shambles.co.uk)
--------------------------------------------------
This tutorial is what I needed :)

I've been wanting to start coding bots for a while now, but I dont have alot of C++ knoledge, and don't really know where to start, I've got a compiler setup and everything, it all works, I've compiled the normal HPB template, and I'm just about ready to start coding (and learning :P) - I can't wait for further tutorials.

I'm hoping to make a Front Line Force bot, as good ones are rare (infact, they don't exsist :P) - the best one is the HPB bot, which is ok.... but a dedicated FLF bot is whats needed (since Hot_bot has stopped being made publicly), I'm hoping it wont be too hard to follow the tutorial and convert things to FLF :).

--------------------------------------------------
02/14/01 at 05:31:33  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
I don't think you understood Craig's response.  He's not trying to make a "coder's tutorial".  He's trying to make a plain english description of how the bots do what they do so that non-programmers can understand how the bots work.

For example I would image Craig would have statements like this...

"The bots search for enemies by looping through the Half-Life engine's list of players to find a player that is within the bot's line of sight."

...and not this...

"Use a for loop to interate though the clients (using the INDEXENT macro to convert a player index to an engine edict structure pointer).  For each player determine if the player is visible to the bot using the FVisible() function and FInViewCone() being sure to pass in the edict pointer obtained from the previous INDEXENT."

The first version is understandable by non-programmers, the second version is not.  If you are expecting a detailed tutorial that explains what the second version means then I don't think Craig's tutorials will give you that (which is, as he said, not his intentions).

botman

--------------------------------------------------
02/14/01 at 06:21:42  Reply by: scary_man (scary_man@shambles.co.uk)
--------------------------------------------------
From the 'CS Bots for dummies' page
QUOTE:
Hey, welcome to the first part of a new series of tutorials dedicated solely to Counter-Strike bots. In these tutorials I’ll be looking at everything that goes into making a bot for Counter-Strike and included will be a lot of theory – not just programming and code. Along the way I may also develop my own bot that you can follow along with and add features to yourself – that’s only if time and university allows :-). It should be said that following these tutorials should be easy for anyone with basic C/C++ knowledge. However, as I said before, although I will be covering quite a bit of code, there will also be plenty of theory so that anyone with no coding skills should still be able to follow along and get a grasp of how these bots we all love actually work. 



This is what I wanted - I've got a C++ book (C++ By Example), and i'm slowley getting there :)

I was attempting to give some positive feedback, as I would really like this tutorial to happen.



--------------------------------------------------
02/14/01 at 08:39:58  Reply by: FaulTereD (faultered@planethalflife.com)
--------------------------------------------------
That's right botman, basically i want to explain the theory about how they work and also guide people trough the code, hence "We will be covering quite a lot of code". It's got to be said that this series probably wont offer anything to experienced bot coders, just to newbie developers or just people who use the bots and are fascinated about how they work, just as i was with quake 2 bots.

--------------------------------------------------
02/14/01 at 14:07:11  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
Hey, maybe you'd like to look at my free open-srouce code, since it's all pretty simple and easy to understand... it's not going to give as good result as PODbot or NNBot, but it is a good start for the newbie bot makers I think, and Ihave been overhauling the waypoint system over the last few days so I may be releasing another much improved version of my code soon :)   The bots will actually check for paths between waypoints instead of just looking for the waypoints themselves, so I think this will enable ppl to make better waypoints for their bots...

--------------------------------------------------
02/15/01 at 02:43:02  Reply by: bigjesus (holybigjesus@hotmail.com)
--------------------------------------------------
Its not such a bad idea I wouldnt do it but its nice to know some one is trying to help.

--------------------------------------------------
02/15/01 at 04:24:35  Reply by: FaulTereD (faultered@planethalflife.com)
--------------------------------------------------
eLiTe i've just downloaded it now. I'll take a look at it over the weekend as i'm away saturday and sunday. If you release a new version before then email me or something. 

On a side note, i got this in an email from someone who read the tutorial. 

QUOTE:

hey,

just read the 1st part, and loved it!  Even if i dont go on to build a bot
in full, it's great to know how it work, how CS works and all that, it can
only make me a better player :)

regards, 
Julius Roberts




So i'm getting to my target audience at least.


--------------------------------------------------
02/15/01 at 15:12:28  Reply by: Mercenary (adamc_@hotmail.com)
--------------------------------------------------
I don't think its a good thing for newbie programmers to start of with ANY kind of project, easy or hard.  It helps a lot if they can understand the lingo, and the theory behind the code before trying anything.  I tryed learning that way, and its taken me over 3 years to completely understand programming.  At first it was copy and paste, but once I understood what it did, I was able to write my own code, free of others snippets.  Maybe newbies should be pointed towards books, and let them ask for help instead of getting code they WON'T understand.  They'll end up with a fragmented project that will end up nowhere.  My suggestion to newbie programmers is to "give up" for now until you can fully grasp all concepts behind programming.


My 2 cents.

--------------------------------------------------
02/15/01 at 16:55:07  Reply by: Spyro (theoddbot@hotmail.com)
--------------------------------------------------
Hi,

I think theory is much more important than programming knowledge (tricks and such).

The odd bot is my first c project, but I had over a year's experience in Java, studing software dev at uni. Before that delphi, pascal and basic.

At uni they try to teach you strategies for solving problems, algorithms and such. (and testing).

My point is, that it's better to understand how something works, and perhaps on how to improve on it, than to know a whole bunch of little tricks for getting your code as small as possible. something like that, anyway.

thanks,

--------------------------------------------------
02/16/01 at 04:52:19  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
But it's also important to understand the basics of writing code.  Things like arrays, structures, pointers, for loops, while loops, string comparisons, sorting elements, searching linked lists, etc.  All of these examples are fairly simple C concepts that a beginning programmer should understand before attempting to implement a navigation system, weapon usage algorithm or anything else that is bot related.  Also since the Valve SDK (which should be used to figure out how things in the MOD will work) is C++, the beginning programmer should also understand C++ concepts like classes and inheritance.

I believe it is worthwhile to discuss various methods of accomplishing a task (with advantages and disadvantages clearly spelled out), but I don't think that just because Joe Blow off the street understands how a bot does a task will mean that Joe will be able to create bot code on his own.  In most cases Joe will flood e-mail lists and forums with newbie programming questions like "how do I read in a list of names from a file?", etc., etc.  Joe should learn to write code before Joe attempts to create a bot.

botman

--------------------------------------------------
02/16/01 at 07:41:05  Reply by: theimann (tobias.heimann@cl.cam.ac.uk)
--------------------------------------------------
> I think theory is much more important than programming knowledge (tricks and such). 

There aren't really any special tricks I could think of that could be useful for bot-programming with C++. What you need to have is a solid base of programming knowledge that you can start with (exactly what botman said). For any problem you encounter there are several possibilies to solve it, some smarter, some brute-force. But I wouldn't call the smarter ones "tricks".
For getting smaller code I use the corresponding compiler function, there isn't any more you could do using C++. 
Yes, there are programming tricks, like self-modifying code, clever use of special commands with certain registers, etc. but that is stuff you need for programming hardcore assembler code and not for bots.

Tobias

--------------------------------------------------
02/16/01 at 15:03:24  Reply by: William (william@botepidemic.com)
--------------------------------------------------
Minor comment wrt. theory vs. code:

Remember that different people have different ways of learning. Some people need to see a consistent theory before understanding something, other people start understanding from studying examples.

Ironically, the "tutorial" sparking this discussion is neither theory nor examples: it's an announcement we should expect great tutorials (both theory and code) in two weeks or so.

William

--------------------------------------------------
02/16/01 at 18:26:07  Reply by: Mercenary (adamc_@hotmail.com)
--------------------------------------------------
Botman, I FULLY agree with what you just posted.

