--------------------------------------------------
Subject: other lingos
--------------------------------------------------
09/29/00 at 05:40:32  Posted by: KyeMan (sky1@biosys.net)
--------------------------------------------------
I'm wondering if its possible to write all or
partial bot code in another language.. such
as Delphi, PowerBASIC, ANSI C or Assembly
which are all capable of producing 32bit 
native code dlls with _cdecl calling.

Not having much of a background in C++, I'm
having a really hard time working out how all
these classes fit together.

If the classing system is a solid requirement,
would anyone volunteer to put together a
"minimal" TFC bot, showing the minimum
requirements for adding a fake client to an MP
mod? Or even better an interface dll that other
programmers could work with.

My idea is that the more people throwing whatever
knowledge of programming they have into this project.
The quicker we will end up with a more realistic bot
and be able to eliminate "some" of the random aspects.

Kye.

--------------

Write all complaints/flames in this space --> []


--------------------------------------------------
09/29/00 at 08:02:06  Reply by: theimann (theimann@stud.fh-heilbronn.de)
--------------------------------------------------
I haven't got that much experience in programming DLLs, but looking over botman's code and seeing all those exported functions (how much time did it take to figure out all this?!?) I am happy of writing my code in C++ without having to care about exports/imports/whatsoever.
If you wrote your code e.g. in Delphi you would have to stick to the exported DLL-functions since all the SDK-source is C++. I think that's a lot harder than learning C++ (especially if you already know Ansi C...) The same for PowerBasic. And Assembly: I wouldn't write not even a part of my bot code in ASM (except for sorting routines or similar functions) because:
1. it gets too long (already in C you've got >1000 LOCs
2. you would have to call the HL-functions (TraceLine etc) quite frequently nevertheless, so  you don't gain anything
I would strongly appreciate this minimal TFC-bot as well, because even when you do have your AI you still have to get the bot into the game...

Tobias

--------------------------------------------------
09/29/00 at 09:02:34  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
There actually isn't any C++ code in the HPB bot.  There are NO classes or any C++ specific functions.  The interface to the Half-Life engine is standard C structures.  If you get rid of the bot_combat.cpp file, you are pretty much left with the minimum needed to spawn a bot and get it to join a game.  You can also eliminate many of the functions in bot.cpp (like BotFindItem, BotFindWaypoint, BotInFieldOfView, BotOnLadder, BotTurnAtWall, BotCanJumpUp, BotCanDuckUnder, etc.)

There isn't any reason that you couldn't create a bot using any language you wanted provided the compiler/linker could create a Windows compatible DLL (or Linux shared library).

I may create a minimal HPB bot framework when I release the next version of the HPB bot.  It would have the minimum stuff needed to get a bot to join a game in Half-Life, OpFor, TFC and CS.  That should give you enough examples to figure out how to get it to join a game in other MODs.

botman

