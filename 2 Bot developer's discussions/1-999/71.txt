--------------------------------------------------
Subject: HL Proxy
--------------------------------------------------
09/04/00 at 08:12:34  Posted by: FullAutoStyle (dwaldrum@yahoo.com)
--------------------------------------------------
I've downloaded the HL Proxy and the Source.

I've been running tests for the past week, connecting to my own server and repeating actions/commands. 

This information that is passed back and fourth is pretty damn cryptic, and not being a network coder makes it worse :P

What I'm trying to do is decrypt some of this information, so that I can input the data into a visual spectator program I've been working on. This would allow people to "watch" clan matches and what not going on. Hopefully this technology could be implemented in tournaments, etc, and would allow people to watch big matches without logging in the server. I'm also working on a crude rendering system to recreate what you see visually in the game, a sort of toned down version (quality wise), which can then be broadcasted through real video.

I HAVE decrypted some of it, including the message sequence, what appears to be a timestamp, and I think I found the unique message ID.. 

If anyone has any info that could help me decrypt some of this information, it would be greatly appreciated. You can reply here or contact me through ICQ or Email. 



Thanks in advance,


Dave W.

PS: I will gladly share what I have learnt/what I learn with other people. But as botman said himself, I will NOT help anyone with aimbots/other forms of cheating. 





--------------------------------------------------
09/04/00 at 10:48:39  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
I would think that having a specator camera would do that for you also.  Are you trying to relay the messages from 1 client to any number of spectators (like an internet video broadcast)?  You'd have to have a least one client to get network data from the server.

Maybe you could have a video capture system attached to a real spetator client then compress that to MPEG and stream that video out to anyone with a fast enough Internet connection.  It would be MUCH easier doing it that way than decoding the network data.

botman

--------------------------------------------------
09/04/00 at 11:48:04  Reply by: FullAutoStyle (dwaldrum@yahoo.com)
--------------------------------------------------
Correct, I would need one client connected to receive the data. I've been working on a way to install the proxy on the "Server" side instead of the client, the "Server" proxy would receive data from all the clients and pass it through to the server, during this process it would also capture this data, format it for its own needs and broadcast it to OTHER client programs.

The problem with video capture, is I need the data in textual form also. To create simpler spectating programs for clients/servers without the bandwidth to get/send video data real time.

This data will also be used for statistics gathering from the servers, comparable to the CLQ but 100% accurate.

If I could use a simpler method like video capture, log port, etc..  I would be a very happy person :)   Unfortunately none of these methods will accomplish all that I need.  :(


Thanks for the response. 



Best Regards,

Dave W.


--------------------------------------------------
09/04/00 at 21:31:12  Reply by: Calavera (hargunk@hotmail.com)
--------------------------------------------------
Dave W.? As in Therin? Hey man, what's shakin'.


--------------------------------------------------
09/05/00 at 00:27:23  Reply by: William (william@botepidemic.com)
--------------------------------------------------
Dave,

there's an feature article up on Gamasutra (www.gamasutra.com/features), describing how game developers can prevent cheating. This addresses how to encrypt your network protocol to prevent client-side bots. You'll get some help from that article in understanding more of the protocol you see passing by.

you may also want to look at the Quake2 message protocol, which wasn't that dissimilar from HL before 1.1.

the big problem you'll run into is that a client solely receives the info the server believes the client might see, or might hear. in other words, you'll have troubles reconstruction the global information present at the server from just listening into all messages targeted to clients. if your spectators would need more control, you'd have to connect them as clients so the server provides the spectator with the right kind of info.

isn't it easier to construct a special version of the match server that 'broadcasts' key information in a protocol you design to other (audience) servers (with again your code) to which spectators connect?

William

--------------------------------------------------
09/05/00 at 05:29:46  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
William's suggestion would probably work pretty well.  Take the HPB bot source, and strip out all the bot movement stuff.  That will allow you to attach to existing MODs and be able to intercept the game DLL's engine calls.  Create your own network protocol to send information to clients.

How you get this network data to become something visual on the client's display is another matter.  You might be able to use some other 3D graphics engine to display the entities but it wouldn't have Half-Life's skeletal animation system and you'd probably have to port the models to something more suited to Quake.

botman

--------------------------------------------------
09/05/00 at 14:38:15  Reply by: William (william@botepidemic.com)
--------------------------------------------------
I didn't say combine HL with Quake. I just referred to Quake2 because it is the last engine for which the network protocol was successfully reverse-engineered, and HL won't be that different from it.

If you know what the entities do on the game server, you can broadcast all relevant state info to another server, and turn it into 'drone' player actions, replicating the original action.

William

--------------------------------------------------
09/05/00 at 22:14:50  Reply by: Mudd (ericp@discordia.net)
--------------------------------------------------
I've been watching this thread with much enthusiasm. As a server admin who regularly hosts clan matches, I've wished for this for a while. I know one other server admin who is so excited he's already posted on his site that he'll have "streaming video of clan matches" available soon! =)

Dave - I even went so far as to do what you've done in an effort to decypher the network data. I'm glad now that I stopped. It just now occured to me that most of the Leauges I am familiar with (Counter-Strike anyway) require 'chasecam mode' to prevent ghost recon. If you arent aware, this locks you into an over-the-shoulder shot of one of your teammates when you die, so you cant float around freely reporting enemy positions to your living teammates over Roger Wilco etc.

You mention that you do not want to encourage cheating, but it would seem that this technology could easily enable this type of cheat, and it could be installed surreptitiously by a rogue clan for an unfair advantage on their home server. I realise that for most other mods, this is irrelevant but I felt that it was worth bringing up.

BTW BotMan - Thanks so much for this site and the HPB bot code. I am having loads of fun (and I expect others are too) customizing these bots to do some amusing things. Now if I can just get them to be worth playing against...

