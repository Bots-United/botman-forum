--------------------------------------------------
Subject: What in the world?!
--------------------------------------------------
12/12/00 at 05:04:31  Posted by: Gen[X]Cops (lastride87@hotmail.com)
--------------------------------------------------
What i wanted to ask was...HOW THE HELL DO U GET BOTS TO FOLLOW WAYPOINTS?! I have ask this in this place and botman gave me a link to a code. He said i had to change some parts for this to work. when i asked how, he did not reply. How the heck am i suppose to figure it out?! I have been learning C++ this few weeks but i still cannot figure it out! Botman plz!

--------------------------------------------------
12/12/00 at 05:23:34  Reply by: theimann (theimann@stud.fh-heilbronn.de)
--------------------------------------------------
Botman did not reply because he can't tell everybody line for line what to write in the source-code. If he would and you modified only a bit of the code afterwards it wouldn't work and probably he would be the one responsible to fix it...
There are plenty of sources for pathfinding in this forum and on the internet. Try not to look only at the source but at the graph-theory behind it as well. It is a complex topic and you should not expect to understand it in a few hours or days.
If you aren't interested in the theory but just want to get a working waypoint-system, why don't you try an available source like e.g. Alistair's?
He promised to release it bug-fixed, so you could just try that...

Tobias

--------------------------------------------------
12/12/00 at 05:25:52  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
To get the bots to "follow" waypoints all you have to do is set the ideal_yaw in the direction of the next waypoint.  You do this by creating a vector from the destination (waypoint origin) to the source (bot's origin) and convert that vector to an angle (using UTIL_VecToAngles).  There's examples of doing this in the HPB bot template source code.  The bots will keep turning to face the ideal_yaw direction and then head off in that direction when they are facing the proper way.

YOU are the one that has to decide what algorithm you want to use to select what the "next" waypoint should be.  There are many sites listed on my "Links" page that have to do with AI and navigation.  You should read through these to find a method you want to use, then write the source code to follow that method.  It's NOT a simple task.  You really should have several months or years of programming experience before trying to write complex bot navigation code.

One of the best ways to handle this type of problem is to think about how YOU decide which way to go in a map that you have never played before.  Do you just wander back and forth between the same two points or do you keep heading off in one direction until you have a choice of directions to choose from?  How do you choose which direction to go?  Do you always head to the left?  Do you always head to the right?  Do you always keep going straight until you reach a dead end?  You need to be able to take the methods that you use when playing the game and convert them to source code that does the same sort of thing.  This is something that does not come easy.  This is the part that takes time in understanding how to convert real world actions into code that simulates those actions.  The only way you are going to learn how to do this is to practice writing code, LOTS of code, write small programs that do simple things.  Modify those to do something slightly different.  Create other programs that handle slightly more complex tasks.  Then move on to other programs that are more complex yet.  Keep doing this over and over and over and over until you know how to do these types of things in your sleep.  Then you will be able to take on more complex issues like navigation in a map or developing good combat tactics.

Nobody (who knew what they were talking about) ever said bot coding was easy.  That's why there aren't very many REALLY good bots out there, because they are HARD AS HELL to make good.

botman

--------------------------------------------------
12/12/00 at 06:48:02  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
How I did it - I saw that the enemy bots look at you and run towards you. So I looked in bot_combat.cpp and copied the part where the bot looks at you. I then modified this to look at a waypoint. Then I simply set the bots speed to maximum and it will walk towards the waypoint. Botman has included plenty of waypoint fnctions - I made a copy of the WaypointFindNearest function and modified it to be my waypoint choosing function. I recommend that you don't just copy my code - try and make your own. You will understand it much better that way...

