--------------------------------------------------
Subject: Finding cover
--------------------------------------------------
08/01/01 at 05:47:30  Posted by: Pembunuh (yip_omar@hotmail.com)
--------------------------------------------------
Hi..

I would need some advise. I am trying to teach the bots to find cover. 

My guess would be to find the waypoints nearest to the bot(in a specific range) from the eyes of the bot's enemy and checked whether the waypoint provides cover.

But I have some problem in trying to set the dest of the line of sight to the waypoint. Which part of the waypoint(origin, top, bottom?) would be suitable to see whether the bot can find cover.

If the line of sight is block, I guess then the bot can find some cover there.

Please give some feedback.

--------------------------------------------------
08/01/01 at 06:27:33  Reply by: William (william@cgf-ai.com)
--------------------------------------------------
I use (in CGF) 2 x 5 lines to test for cover:

from
- threat head when standing
- threat head when crouched
to
- friendly head when standing
- friendly stomach standing / head when crouched
- friendly feet whenever
- friendly left belly standing /shoulder when crouched
- id, right side

For CS, you'd need to test for wall thickness as well, which requires an extra trace line for each blocked trace line.

If all lines are blocked, you have good cover. If all lines except the standing head lines are blocked, you have cover when crouched.

Because of the amount of tracelines involved, I suggest precomputing the cover relations between waypoints.

The quality of the solution depends very much on having a dense coverage of waypoints; otherwise, the bots might not use a perfectly good cover position.

There's a really old tutorial at the defunct bot-aid site which provides a little bit of info:
http://www.botepidemic.com/aid/navigation/navigation_findingcover.html

William
p.s. yes, precomputing the info introduces some problems: lines of fire being created/blocked because of dynamic entitites (read: doors, APCs) are not represented correctly. However, these effects can be tested for with a single traceline (since the precomputed info can tell you what to test for), and the tables can be patched on the fly.

[modified on 08/01/01 at 06:27:33]
--------------------------------------------------
08/01/01 at 10:46:20  Reply by: Pembunuh (yip_omar@hotmail.com)
--------------------------------------------------
Woohoo...:)

Thanks..


