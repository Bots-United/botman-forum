--------------------------------------------------
Subject: How to determine...
--------------------------------------------------
11/15/01 at 01:20:25  Posted by: jerry_stoel (jerry_stoel@hotmail.com)
--------------------------------------------------
Hi,

How can I determine the height of a ladder? If  anyone can point me in the right direction with a function or something. I will be gratefull.

seeya,

--------------------------------------------------
11/15/01 at 03:04:00  Reply by: jerry_stoel (jerry_stoel@hotmail.com)
--------------------------------------------------
Sorry for posting I looked with my shoe or something. It's: ladder->v.maxs.z offcourse :). I feel stupid...

I now have an autowaypoint code for ladders very cool :). Example:



      --------+
              ]
              ]
              ]
              +P 
              ====================


When I stand at the P (hanging a little on the ladder without touching the ground). The command: "waypoint add ladderall" will add a ladder waypoint at the + (top and bottom).

cu,

[modified on 11/15/01 at 03:03:42]

[modified on 11/15/01 at 03:04:00]
--------------------------------------------------
11/15/01 at 04:35:13  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
Cool, you should take a look at the REALLY NASTY code I had to put in the autowaypointer of my BSP tools to automatically set waypoints at all func_ladder entities.  It took several hours (and several different attempts to come up with a method that works on almost any ladder, including slanted ladders and really wide short ladders).

botman

--------------------------------------------------
11/15/01 at 04:54:51  Reply by: jerry_stoel (jerry_stoel@hotmail.com)
--------------------------------------------------
I will take a look at your source of the bsp_tool to see how you did it. It didn't took me long to code the auto-ladder-waypointing. The hardest thing was too determine the height of the ladder :).

Well I looked into your code and wow! Some parts are hard too understand, but most of the code is pretty straight forward. You look trough all faces and each time remember the vertexes, if I am correct and then you can determine the bottom and top of the ladder. It looks the same as my code, only in C written :). I also loop through all func_ entities and then determine the top and the bottom and place waypoints there.

[modified on 11/15/01 at 04:54:51]
--------------------------------------------------
11/15/01 at 05:49:05  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
Correct.  It's a little easier to do things when you have access to the vertex information of the faces of the ladders.  I didn't realize that ladders had 6 faces (until I sat down and thought about it, oh yeah, it's kind of like a box of cerial with 6 sides).

The only problem you might have with using the bounding box min and max is that, for a slanted ladder, you can't tell which way it is slanting.  Imagine a square box with a ladder going from one corner to the opposite diagnal corner.  The bounding box min and max is the coordinates of the "lowest" corner and the "highest" corner.  If you change the ladder to go in the opposite diagnal corners, you won't change the bounding box (it stays the same since it's still the same square box), but you will change the coordinates of the top and bottom of the ladder.  You get the same effect with a ladder that's running straight up and down vertically, but is slanted forward (like a ladder you might find on a slope of a steeply angled wall).  These were problems that I encountered when trying to waypoint ladders in non-Valve deathmatch maps (tig_bunk by www.planethalflife.com/tigger/Tigger-oN is one such map).  When you have access to the vertex information these problems go away.

botman

