--------------------------------------------------
Subject: HudMessageAll ?
--------------------------------------------------
06/17/01 at 07:52:11  Posted by: Spectual (spectual@hotmail.com)
--------------------------------------------------
How do I use UTIL_HudMessageAll ?

--------------------------------------------------
06/17/01 at 08:17:00  Reply by: Cheesemonster!!! (paul.murphy@ntlworld.com)
--------------------------------------------------
is that that thingy that makes text appear (fade in & out) near bottom centre of the screen? Cos, well, I wouldnt think it would be that useful for a bot... :-/ well it is as sumthin like this (in util.h)....? heh, im not much help... :)

UTIL_HudMessageAll(const hudtextparms_t &textparms, const char *pMessage );

hudtextparms <- table definition
textparms <- table
pMessage <- actaul Message


I would guess..??


--------------------------------------------------
06/17/01 at 08:41:41  Reply by: Spectual (spectual@hotmail.com)
--------------------------------------------------
I know by now, I won't be able to use UTIL_HudMessageAll before I have copied and adjusted the code from the valve sdk. Actually, the only thing I don't know about it right now, is what all the parameters in the class hudtextparams_t does.

The class is defined as the following:

typedef struct hudtextparms_s
{
      float            x;
      float            y;
      int                  effect;
      byte            r1, g1, b1, a1;
      byte            r2, g2, b2, a2;
      float            fadeinTime;
      float            fadeoutTime;
      float            holdTime;
      float            fxTime;
      int                  channel;
} hudtextparms_t;
 

--------------------------------------------------
06/17/01 at 08:48:26  Reply by: Cheesemonster!!! (paul.murphy@ntlworld.com)
--------------------------------------------------
x <- x coord of text
y <- y coord of text
effect; <- effect of text i.e. scanlined credits, fade etc
r1, g1, b1, a1  both must have something to do with the colour / brightness of the text
r2, g2, b2, a2 

fadeinTime <- how long the text takes to fade in
fadeoutTime <- how long the text takes to fade out
holdTime <- how long the text stays on the screen excluding fade time iwould guess
fxTime <- possibly how long the effect is given to the text
channel <- This is the "channel" given to the text i.e. line :) (1 to 4)

I know some of this through mapping looking at the game_text entity :) have a look through a halflife fgd file for it!!! :)



--------------------------------------------------
06/17/01 at 08:49:01  Reply by: Cheesemonster!!! (paul.murphy@ntlworld.com)
--------------------------------------------------
this is what it says in the fgd file, pretty self explanatory....


      message(string) : "Message Text"
      x(string) : "X (0 - 1.0 = left to right) (-1 centers)" : "-1"
      y(string) : "Y (0 - 1.0 = top to bottom) (-1 centers)" : "-1"
      effect(Choices) : "Text Effect" : 0 =
      [
            0 : "Fade In/Out"
            1 : "Credits"
            2 : "Scan Out"
      ]
      color(color255) : "Color1" : "100 100 100"
      color2(color255) : "Color2" : "240 110 0"
      fadein(string) : "Fade in Time (or character scan time)" : "1.5"
      fadeout(string) : "Fade Out Time" : "0.5"
      holdtime(string) : "Hold Time" : "1.2"
      fxtime(string) : "Scan time (scan effect only)" : "0.25"
      channel(choices) : "Text Channel" : 1 =

--------------------------------------------------
06/17/01 at 08:52:08  Reply by: Spectual (spectual@hotmail.com)
--------------------------------------------------
Yeah you are right.

Your posts helped me a lot - thanks!

