--------------------------------------------------
Subject: Advanced code help plz
--------------------------------------------------
04/07/01 at 10:08:52  Posted by: actionhank (clandday@hotmail.com)
--------------------------------------------------
Im trying to make code that draws a little block/dot on the screen that follows each of your teammates (through walls whatever) that displays (possibly) there name. This would really be a sweet feature for my mod and I would urge anyone to copy it for it would make finding teammates easier.

--------------------------------------------------
04/07/01 at 12:10:40  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
Yeah that would be cool, but could get a little messy when you have a lot of team-mates... well maybe not. Could be kind of like the HUD of an aircraft cockpit with little arrows at the side when your team-mates go off the screen :)

--------------------------------------------------
04/07/01 at 13:08:31  Reply by: theimann (killaruna@yahoo.com)
--------------------------------------------------
Isn't that the kind of thing you do with the client dll?

Tobias

--------------------------------------------------
04/07/01 at 18:43:48  Reply by: bigjesus (holybigjesus@hotmail.com)
--------------------------------------------------
well im not too sure but maybe the thing that you could try is adding a small sprite graphic instead of trying to draw and then maybe you should look into some of the pro sdks view code if that doesnt help you much its because not many ametures like myself have tried it. good luck though.
although im not sure what u mean by that im still thinking you want something like homeworld or battlezone II not sure plz specify a lil more.

--------------------------------------------------
04/07/01 at 23:22:02  Reply by: DeltaShark (snake@magpage.com)
--------------------------------------------------
you mean like this?
http://www.magpage.com/~snake/sc4.jpg


--------------------------------------------------
04/08/01 at 05:34:12  Reply by: actionhank (clandday@hotmail.com)
--------------------------------------------------
Yes thats exatcly what I want deltashark just with green blocks instead of blue dots please tell me how you did this/found this

--------------------------------------------------
04/08/01 at 12:45:25  Reply by: actionhank (clandday@hotmail.com)
--------------------------------------------------
Just an Idea.
If you just take the code that makes a sprite/model appear and follow a player in CTF isnt it possible to do the same with this and just make it so you can see the sprite through walls
(unfortunatly Im still trying to get my CTF working so can someone pleaze help)

--------------------------------------------------
04/08/01 at 14:19:23  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
neil, you should go look at some of the client tutorials (for things like converting player world coordinates to screen coordinates and displaying messages to specified positions on the display).

There was a discussion about world to screen coordinates on the hlcoders list at www.topica.com just a few days ago.  You might search the messages there for some tidbits.

botman

--------------------------------------------------
04/09/01 at 09:58:29  Reply by: DeltaShark (snake@magpage.com)
--------------------------------------------------
in the triangle api, there is a function called worldtoscreen or something, well anyway, it return a vec3_t i believe.  only the x and y portions are used.  In them will be a number usually between -1 and 1, if the object is on the screen.  This is not the correct screen coordinates.  To get them you will need the screen dimensions. the vector is the proportion from the center of the screen, so you will need to do some math.  

vec3_t coord;
int sx,sy;
int x,y;

engfuncs.pTriapi->gl_worldtoscreen(pent->origin,coord);

sx = screenwidth/2;
sy = screenheight/2;

x = sx+(float)sx * coord[0];
y = sy+(float)sy * coord[1];

then its just a matter of placing a sprite or something at that offset.  That is more pseudo code then anything, i am not at home so i cant look at my code.  but that is the general way it goes.

