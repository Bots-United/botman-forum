--------------------------------------------------
Subject: Multipath navigation
--------------------------------------------------
06/06/01 at 10:01:03  Posted by: RedFox (redfox@nildram.co.uk)
--------------------------------------------------
Hi guys
Well, seing as this is the best forum for disgussing technical stuff, I thought I'd pass this one by you guys.
I'm working on getting my bots to use every path available to them to reach a goal. 
The probelm is in working out what paths are available to the bots. The shortest route data doesn't help much here. 
I've had several attempt with varying sucess, with the only algorithm that produces the most acurate results taking 2days to work out the route data (and filling my hd in the process).. lol
I'm working on another one thats not too bad, but doesn't give every route, so it kind of defeats the process. Also due to space restrictions it works the data out everytime the bot wants to reach a new destination.
Ok, so I'm basically wondering if anyone has any ideas on working out every route (including the stupid ones) from point A to B.
Also, if it can slope the path data along the way, so it keeps the bot moving in the right direction.
Basically, everypath is available to the bot, but it can only head towards the goal, so never back track along a path its already used. This doesn't meen not being able to take stupid routes, just makes sure it can't backtrack that route.

Any help would be greatfully received :)

Also, once you apply this data to the rating system (discussed in another post) or somthing similar, the bots will be able to learn which paths are best to take.
I can do that bit, its just the path data thats the problem :/

Thanks

Oh, can it be done by using the shortest route data, and modifying it slightly.. I did try this but it keeps throwing up problems as to how to proceed. Just an idea (to keep the processor time down)

RedFox



--------------------------------------------------
06/06/01 at 11:57:28  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
A depth-first or breath-first search may lead you to what you are looking for (although you probably don't want to stop when the first/best route is found).  Depth-first and Breath-first search algorithms can be found here...

http://softlab.od.ua/algo/other/alg/node80.html

...looking at some of the spanning tree algorithms at the above URL may also be useful.

botman

--------------------------------------------------
06/06/01 at 19:16:55  Reply by: RedFox (redfox@nildram.co.uk)
--------------------------------------------------
Cheers dude, thats most helpful :)

RedFox

--------------------------------------------------
06/10/01 at 05:20:52  Reply by: holybigjesus (holybigjesus@hotmail.com)
--------------------------------------------------
a* is quite flexible you can add multiple precalculated paths to the system as sorda like a side system to help the bot get from goal to goal by using weights and other things you should look into it i forget the link i know its at gamesultra :P cheers good luck on your system.
 Edit: hehe you proly already know that duh sorry this was not my day lol. :P


--------------------------------------------------
06/11/01 at 11:06:44  Reply by: RedFox (redfox@nildram.co.uk)
--------------------------------------------------
Do you have any links to info on a* as all the net search engines complain about it. even if its in ""
Or parhaps its me being stupid :)
The tree stuffs working well, but I'd like to have a look at a* aswell.
Thanks

Red

--------------------------------------------------
06/11/01 at 11:14:48  Reply by: theimann (killaruna@botepidemic.com)
--------------------------------------------------
Have a look at Amit's A* pages: Botman has the link...

Tobias

--------------------------------------------------
06/11/01 at 13:14:48  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
Most web sites use "A star" since you can't enter a '*' on search engines.

Amit's site (the best I have found for A*) is...

http://theory.stanford.edu/~amitp/GameProgramming/

botman

--------------------------------------------------
06/11/01 at 15:10:29  Reply by: William (william@cgf-ai.com)
--------------------------------------------------
The hard-core overview for navigation routines is:
www.red3d.com/breese/navigation.htmlBjorn Reese's Navigational Overview.

Most of the stuff is academic.

Bjorn also (once upon a time) put a reference to a real 'multi-path' path finder on the comp.ai.games newsgroup. Google/Dejanews can probably find it for you.

The introductory A* overview is from Bryan Stout:
www.gamasutra.com/features/19990212/sm_01.htmSmart Moves: Intelligent Path-Finding. Reportedly, Bryan is about to complete a book on game programming.

Also recommended is the book 'Game Programming Gems I'. Its kinda expensive, but probably worth every cent if you're serious about game programming. 

Happy reading :)

William

--------------------------------------------------
06/12/01 at 05:03:53  Reply by: RedFox (redfox@nildram.co.uk)
--------------------------------------------------
Thanks for those links guys, gonna check them out now and see what its all about.
I can say (for anyone else doing this) that I've ruled out BFS as it doesn't produce enoughf path (but interesting none the less...pretty close to shortest path ratings, in 1% of the time the shortest path code takes to claculate..hmm)
Also DFS and a modified BFS to work quicker than DFS are to slow for real time A->B multipath, but produce the best results.
The original stuff I worked on took up 100meg as a lookup table (hence working on realtime versions), but I'll see if these new algs can work as a lookup.

I'll also check out the A* stuff :) Thanks for that. 

