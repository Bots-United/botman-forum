--------------------------------------------------
Subject: The aim & vision thread(tm)
--------------------------------------------------
04/03/01 at 08:57:56  Posted by: impaqt (impaqt@online.no)
--------------------------------------------------
Heres a thread dedicated to vision and aim code in particular, just like Count floyd asked for :P

I'm planning a technique right now, should post it soon

anyway post your ideas 



--------------------------------------------------
04/03/01 at 10:03:27  Reply by: ExecutionStyle (c_brennan@hotmail.com)
--------------------------------------------------
I'll make a few suggestions of points to consider, but I won't give any input on how to actually do the aiming code-wise because I haven't gotten that far yet.

-bot's shouldn't "see" an enemy as soon as it comes into their vision.  This should depend on how far away the enemy is, and more importantly what the bot is doing, so if it's currently chasing an enemy, it should necessarily notice a new one appearing at the edge of its vision.

-most bots don't take into account the fact that in the real Half-Life game, aiming your gun and aiming your player are the same thing.  What I mean is that afaik bot aiming code doesn't consider the bot's current movement goals when deciding where to aim.  There is an exception as far as strafing goes, where you can be aiming in one place and moving to another, and bots should use this to aim at one point while navigating to another.

-the speed that a bot acquires a target at should depend on how many target options it has and what they are doing.  If you have 4 targets on your screen, you'll be a bit fuddled and not aim at any given one as fast.  This slow-down should be skewed so newbies experience more than bots.  Also, if 3 are facing away and 1 is facing towards.. you know what I mean.  This would be a very human-like response since it takes more information into account.

-lastly, one thing I think most bot developers overlook is that moving a mouse implies the mouse and the user's hand having momentum.  If a bot's aiming vector changes by a large amount, that should mean that it can't stop dead on the next frame.  It should have to be dragged to a stop as if it was a lead weight.  I said I wasn't going to make code-wise suggestions but I will anyway ;)  If you program the aiming so that the sights have a weight associated with them, and the only way to move them is to apply forces on them in the desired direction, then it will swing around very similarly to the way a human's does.

enough, I have to get back to work.  I haven't been able to work on any bot-related stuff except to keep up with this forum.  Stupid work!  Ack...

 -Carl

--------------------------------------------------
04/03/01 at 10:47:12  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
I read the CGF vision thing last night!! I thought about it last night and this morning and I made my own aiming system where when the bot first sees as enemy it gets a random direction in the general direction of the enemy (not so close to the enemy if it didn't hear it coming). The aim then drifts closer to the enemy over time (slower if the bot is running, faster if it is ducking/staying still, etc). I even made it so that if the enemy is facing the other way then the bot will wait till it has a better aim before firing =)

I thought about acceleration but decided it would be a bit too complicated, and not altogether realistic, I don't really accelerate, I have such a high mouse speed that I just move at the same speed, and usually stop when I reach an enemy instead of goign past it (maybe slightly). The bots aim towards the enemy at different speeds and could actually start moving the mouse away from the enemy in some cases, so that they don't move straight towards the enemy. I tweakes it a bit and now it seems to be pretty human... when the bots were up close they had trouble getting the enemy within 10/20 degrees FOV, so I used my old aiming system up close it is hard to get an enemy within a 10/20 degree FOV, so the bots just fire even if they do not have a perfect aim, so the system is working out pretty well. Now that I have done all the basics I'm gonna work on radio/chat commands, therefore TEAMPLAY!!! This is gonna be cool with bots gining each other orders/calling for backup to protect the bomb, etc :)

--------------------------------------------------
04/03/01 at 11:39:17  Reply by: impaqt (impaqt@online.no)
--------------------------------------------------
good points execution style..

nice work Alistair, very nice :)
so now you can perhaps go even further intp bot personalities, including mouse sens. and stuff ?

try looking at the bot personalities from the q2 gladiator bots, lots of different options, although i dont think all of them work at all :)



--------------------------------------------------
04/03/01 at 11:53:17  Reply by: pikachu (emperorstuart@hotmail.com)
--------------------------------------------------
Make the bots think :D

--------------------------------------------------
04/03/01 at 13:54:21  Reply by: William (william@botepidemic.com)
--------------------------------------------------
Just my 2cts:

QUOTE:
-bot's shouldn't "see" an enemy as soon as it comes into their vision.  This should depend on how far away the enemy is, and more importantly what the bot is doing, so if it's currently chasing an enemy, it should necessarily notice a new one appearing at the edge of its vision.




Didn't really do that for CGF. Typically, the player will notice almost any visible threat that represents a larger threat than his current threat. By just having the bot see every threat, and by having him switch to any new threat that seems a significantly larger threat, you get that effect in a cheaper way than deciding whether or not the bot will see a threat.

The exceptional case is the AI having a preference for a closely packed group of distant enemies versus a single threat at half that distance.

It's probably more important to reduce the AI's vision when he is being hit.

QUOTE:

-most bots don't take into account the fact that in the real Half-Life game, aiming your gun and aiming your player are the same thing.  What I mean is that afaik bot aiming code doesn't consider the bot's current movement goals when deciding where to aim.  There is an exception as 




I prefer bot aiming code to have priority over bot movement code. Aiming in CS is more important than moving when threats are near.

QUOTE:

-the speed that a bot acquires a target at should depend on how many target options it has and what they are doing.  If you have 4 targets on your screen, you'll be a bit fuddled and not aim at any given one as fast.  This slow-down should be 




Agreed. Also depends on the amount of target you see, and the bot's own movement (you see less when you move).

QUOTE:

bots.  Also, if 3 are facing away and 1 is facing towards.. you know what I mean.  This would be a very human-like response since it takes more information into account.




Done that. Not all players like the result (being killed without having a chance to fight). 

QUOTE:

-lastly, one thing I think most bot developers overlook is that moving a mouse implies the mouse and the user's hand having momentum.  If a bot's aiming vector changes by a large amount, that should mean that it can't stop dead on the next frame. 




A feedback loop with decaying error caused by threat movement and bot movement does the job in CGF. Works great.

William


--------------------------------------------------
04/03/01 at 17:30:14  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
QUOTE:
nice work Alistair, very nice :)
so now you can perhaps go even further intp bot personalities, including mouse sens. and stuff ?

try looking at the bot personalities from the q2 gladiator bots, lots of different options, although i dont think all of them work at all :)




Sorry I don't have Q2, any links or anything?

Well I wondered how I should change the aiming according to personality, and if you have looked at my more recent source you may have noticed an 'accuracy' vaiable in BotBodyTarget (I think that's what it's called). Now instead of changing the amount that the random aiming offset, it changes how fast the bot can face towards the enemy... there were problems with this system up close, eg bots not turning fast enough to fire at the enemy, so I added in a few changes for distance, eg the closer the enemy is the faster you turn, and also within 200 units the bot will fire whether it has a good aim or not.

Thanks for describing the CGF aiming system on your site William, I think it has made my bots more human-like!

--------------------------------------------------
04/04/01 at 00:29:17  Reply by: William (william@botepidemic.com)
--------------------------------------------------
the gladiator AI (by MrElusive) is briefly discussed here (at its home page):
www.botepidemic.com/gladiator

the gladiator AI is also the foundation for the QuakeIIIArena AI. just play Q3A (not the pre-release demo's, which had AI by John Cash)...

note that the Q3A AI (together with CGF and the Frogbot for Quake I) is one of the few AI's capable at pre-emptive / suppresive fire (that is, they tend to fire rockets/guns at spots where they predict you will reappear).

that's another aspect of aiming you may want to consider

William

--------------------------------------------------
04/04/01 at 04:37:18  Reply by: theimann (killaruna@yahoo.com)
--------------------------------------------------
The Parabot aiming is based on a modified inertia/momentum/acceleration-calculation. The faster the bot tries to turn, the higher gets the error involved. Opposed to CGF the main priority is movement in certain situations (e.g. when the bot is heading towards a better weapon). In these cases the aiming accuracy is decreased depending on the angle between movement- and aiming-directions: As ES said, strafing doesn't really inflict much with good aiming.
The bots know the difference between players aiming at them (real threads) and players that haven't noticed them (real victims) - very nice feature :-)
For testing the aiming calculations I wrote a little simulator (a crosshair trying to "aim" at your mouse-cursor) - that helped quite a lot. You can recognize good aiming on weapons using laser-dots (RPG, Sniper-rifle): The dot shouldn't jump wildly around the player but have a rather smooth movement.
I found it very useful to be able to estimate the aiming accuracy for e.g. sniper-shots if the bots want to surprise the player. Try to find a way to get reasonable estimations for your aiming-calculations.
And yeah: pre-emptive fire would be very cool, but you need visibilty information for that one (which I - currently - don't have).

Tobias

--------------------------------------------------
04/04/01 at 04:56:47  Reply by: impaqt (impaqt@online.no)
--------------------------------------------------
pre-emptive fire isnt that usefull in all mods though, in cs you mostly need it for grenades and maybe through-wall shooting

--------------------------------------------------
04/04/01 at 13:30:01  Reply by: ExecutionStyle (c_brennan@hotmail.com)
--------------------------------------------------
Tobias: I think it's really cool that you wrote a test app to get a feel for how your aiming system was going after a given point!  As part of developing my navigation code, I'll be adding bot training code that will allow the player (me) to say "All bots go to the point I'm aiming at" so that I can stand there and shine a point (ie red-dot RPG style) at different places and see how the nav code causes bots to go there.

Now you've got me all interested and I have to go download your Parabot and try it although I never play HL deatchmatch :)

William: thanks for the feedback... You probably don't know how intimidating it is to suggest ideas knowing that you've almost certainly already implemented them in your CGF ;).  I've gone so far as to download AHL but haven't had time to install it yet.. another must-do to see the competition's bots :D

 -Carl

--------------------------------------------------
04/04/01 at 13:47:37  Reply by: impaqt (impaqt@online.no)
--------------------------------------------------
cgf is for aq2 not ahl, right ?

whats your theories on through-wall shooting..
Count Floyd says he has it supported, I want to hear how he did it :)






--------------------------------------------------
04/04/01 at 19:41:17  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------

QUOTE:
the gladiator AI (by MrElusive) is briefly discussed here (at its home page):
www.botepidemic.com/gladiator

the gladiator AI is also the foundation for the QuakeIIIArena AI. just play Q3A (not the pre-release demo's, which had AI by John Cash)...

note that the Q3A AI (together with CGF and the Frogbot for Quake I) is one of the few AI's capable at pre-emptive / suppresive fire (that is, they tend to fire rockets/guns at spots where they predict you will reappear).

that's another aspect of aiming you may want to consider

William




I wondered what you meant by 'suppressing fire', and I did notice that the Q3 bots fire at a spot where they last saw you, or where they think you will appear...

--------------------------------------------------
04/04/01 at 19:49:11  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
CF probably just let the bots shoot through the wall at the place where the enemy just disappeared. I haven't really played with POD tho

--------------------------------------------------
04/06/01 at 07:14:56  Reply by: GambiT (arrago_a@epita.fr)
--------------------------------------------------
Here is another idea I got two weeks ago...
Playing with bots is just somtimes too unfair as they see you no matter where you stand.
A good point I saw was in CGF, where the bot can determine how much of your body it can actually see, which is quite influent on aiming...
Also, in the same way of thinking, it would be could not to be detected (in 1 frame for ex.) by bots when you stand still, are crouched and silent, when you stand in a dark spot...
So, a cool idea would be to implement a radar-sgnature-like feature, which gives you a certain amount of furtivity depending on how stealth you're being...

Wouldn't it be cool ?
I currently have not much time for discussing about it today, just reply in the forum, or email me (arrago_a@epita.fr) or icq (38813915) for private chat...
See you next time.

--------------------------------------------------
04/06/01 at 20:11:55  Reply by: Clean (botmans@divinegods.net)
--------------------------------------------------
A good simulation of a real human player depends on several factors:

1. the distance of the enemy,
2. the number of enemies there are,
3. the time to choose a direct enemy (reaction time),
4. the number of enemies in the field of view,
5. the number of enemies grouped around the center of the field of view,
6. the amount and speed of turn before enemies are "believed" to be in the field of view,
7. the speed of turning that affects the reaction time when enemies are within the field of view.

These are basic things to implement I think. Not to mention sound belongs to the distance of enemy factor, but sound is more complex such that you would need some elementary wave phyiscs to judge the distance and position of a sound's origin and used in conjunction with sight.

Of all these factors, if the enemy simply isn't in the dead center of the current field of view, all movement is affected by a pendulum effect. This effect is where you over or under aim your enemy and you are trying to center in. On my crappy system and screen resolution, most of the time I cannot possibly aim directly at someone's head at a distance of 75 feet because my mouse and screen resolution are too low. Any other attributes like not seeing other players if they lie in the outer radius of the field of view or in areas where there are more objects surrounding the character and also the color camouflage that affects the bot's judgement and reaction is up to the programmer to implement.  The pendulum vectorization of aiming is the first thing in my humble opinion needing some implementation.


--------------------------------------------------
04/07/01 at 07:21:23  Reply by: CountFloyd (countfloyd_1999@yahoo.com)
--------------------------------------------------
QUOTE:

whats your theories on through-wall shooting..
Count Floyd says he has it supported, I want to hear how he did it :)



I had a hard time figuring out how to make it working & realistic at the same time. I started by looking at the Gauss Code in the HL SDK but it didn't do anything good for me. I'm now using a mix between the original Traceline Gauss Code & some additional UTIL_PointContents to check the thickness of obstacles & how much are in the way. Certainly you need to check how much piercing damage each CS Weapon does and let the Bots check if they got that weapon (I don't let the Bots just fire at the last seen position like Elite assumed). Firing thru Walls in my Bot (in the yet unreleased V2.0) is skill-dependant and only done if a number of conditions are met:
- If the enemy has been seen before
- If it isn't more than 100 Units away from the last exit point of a hit obstacle in the way
- If the bullet doesn't go through more than 2 walls and no wall is thicker than 64 Units

I found out that an AWP/Para can shoot through 3 Walls with a bigger thickness than 64 Units but this resulted in unrealistic kills as you can imagine.

--------------------------------------------------
04/07/01 at 12:19:47  Reply by: William (william@botepidemic.com)
--------------------------------------------------
Some (late) reactions:

- pre-emptive fire vs. suppressive fire
Pre-emptive fire is firing at a position the where (out-of-sight) threat is likely to appear (soon). It gives you a 'response time advantage' (you can steady your aim before the threat appears). 
Pre-emptive fire is most useful for projectiles (missiles, grenades), but also for 'power-up' weapons (TFC heavy mg).

Suppressive is firing at a position to deny the threat access to that position. It is typically done to limit threat movement, and to create better maneuver conditions for team members.
I personally love to waste a belt in support of my team members in CS, and I used to deny opponents an exit from the TFC Rock key room using the heavy machine gun.

In other words, both pre-emptive and suppressive fire aren't limited to a few games. However, it isn't easy to judge when to use it.

- "CGF intimidation"
The reason I participate in this message board is definitely not to collect praise or to slash other peoples ideas.
The real reason is different simple: I don't have enough time to work on AI. I find that participating in the discussions here is the next best thing to implementing AI myself. Most of the participants here are rather new and have fresh ideas (past experience can be a limitation as well). I learn a lot here, and I'm able to improve my AI from discussions here.
With my CGF, I sometimes have a headstart, because I've made more mistakes than most of you :)

- viewing vs movement priority
Tobias, CGF gives movement priority over viewing (and doesn't even do strafing). I probably reverse that in a new AI. I'm not that sure which solution is better, but I'm not satisfied with bots losing sight of a threat because they do some silly movement.

- pendulum aiming
You get a pendulum effect for free if you do a aim+move momentum based aiming error mechanism.

For larger distances, the AI should aim more for the waist than for the head. It's a very simple computation. CGF does that (with some exceptions in case a sniping scope is used). In addition, the AI compensates for muzzle kick (the CS AK47) by aiming the first two shots low.

William

--------------------------------------------------
04/07/01 at 17:07:24  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
Yeah after I read about the CGF AI aiming system I thought about making a system with acceleration but decided the pendulum-like result wouldn't be very good/realstic. I have been looking at the way I aim since I read that page and it's more like I fall behind the player at first, then I start to predict where they will be soon, and if they stop then my aim swings past, then back. An accelerating aim would result in the aim swinging back and forth constantly, unless you made it 'degrade' like I think William mentioned. But my ststem simply moves the crosshair towards the enemy at different rates depending on what the bot is currently doing.

--------------------------------------------------
04/07/01 at 17:16:55  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------

QUOTE:
Here is another idea I got two weeks ago...
Playing with bots is just somtimes too unfair as they see you no matter where you stand.
A good point I saw was in CGF, where the bot can determine how much of your body it can actually see, which is quite influent on aiming...
Also, in the same way of thinking, it would be could not to be detected (in 1 frame for ex.) by bots when you stand still, are crouched and silent, when you stand in a dark spot...
So, a cool idea would be to implement a radar-sgnature-like feature, which gives you a certain amount of furtivity depending on how stealth you're being...

Wouldn't it be cool ?
I currently have not much time for discussing about it today, just reply in the forum, or email me (arrago_a@epita.fr) or icq (38813915) for private chat...
See you next time.




I'm unsure how to detect how much of a player is visible in HL without doing LOTS of tracelines, the only thing that affects how fast my bots aim is:

- if they hear you coming they will 'react' to you immediately and will start firing at you after 'reaction value' time.

- if they don't hear you coming, they will 'react' to you after (distance/6000) seconds (1 second for 6000 units).

- if you are ducking 'reaction value' is added to the 'react' time.

- if you are firing 'reaction value' is taken away from the 'react' time.

Then they detect how many degrees above/below you are in the X axis (I only added this tonight), and will add degrees/90 to the 'shoot time'. The dergees are always positive, and this will mean that if the bot has to look up 45 degrees to aim at u it will take him 0.5 seconds longer than usual to fire, to make up for the bots superhuman ability of having a 180 FOV in the X axis.

I also implemented a counter that will count how many enemies are in the bots FOV, and enemies/31 will be added to the bots 'shoot time', so if he can see 31 enemies he will take a second longer to shoot. And also he will look for enemies that are facing him first, and enemies that are facing away second.

This discussion is really good! I think I've made my bots combat much more realistic because of it!

--------------------------------------------------
04/08/01 at 07:02:33  Reply by: impaqt (impaqt@online.no)
--------------------------------------------------
william, are you making a hl bot ?
im just wondering, as cgf turned out great any bot you make for hl should also be great too(i hope)


--------------------------------------------------
04/08/01 at 13:51:20  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
Yes I think I asked you what you are doing for a job in another thread but I never saw the answer. Since then I saw the CGF AI site so I assume you are doing tactical AI stuff for a job... but also is some of you're posts it almost sounds like you are making a bot for HL, like you said u used scripted bots in DoD and mowed them down with this machinegun on a beach... or was that simply some sort of fantasy you had?? :D

--------------------------------------------------
04/09/01 at 12:07:44  Reply by: William (william@botepidemic.com)
--------------------------------------------------
OT answers:
- I'm not doing a HL bot
- I discuss jobs in email only
- I indeed referred to Omaha beach, which is (also) a great dday for Quake II map (I like it better for game play than the DoD map)

I might be able to make a good CS bot, but...

My goal is to contribute great tactical AI to a new game, preferably during the development of that game, and in close cooperation with the other game developers.

I don't mind figuring out my way in and around the engine or mod code, but given the limited time I have available, I chose not to write yet another bot for a closed mod on a game engine lacking decent movie playback (a must when debugging squad maneuvers).

Instead, I betted on contacting game developers, and on improving my designs and publishing some ideas at the Game Developer Conference and in the Game Programming Gems II book, all next to a great day job. (All of this also involved studying the AI present in games such as UT, QIIIA, SWAT3, ...).

I'm not certain this is the best move, but it sure is fun. (Though my fingers sometimes ache when playing a good game of CS).

William

--------------------------------------------------
04/09/01 at 12:51:00  Reply by: impaqt (impaqt@online.no)
--------------------------------------------------
hehe, nice job

--------------------------------------------------
04/09/01 at 15:58:16  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
Yeah it would be fun to make game AI full time, although I also want to do 3D graphics and realisticly modeled physics if I make a game :)

--------------------------------------------------
04/10/01 at 14:06:13  Reply by: [TGF]AngryMiner (P.Galaske@t-online.de)
--------------------------------------------------
/me just noticed how many people are here i only heard of... (you could say "the gods of programming")

i wanna do a job about AI too, but i have to read MUCH more. i have so many ideas, but i'm not able to code them (i have real learning engines etc.)

about the aiming:
i'd like to say that the bot-author shouldn't concentrate on human-like-aiming too much, because then the bots often loose their skills...

(i prefer the good old aim-at-the-head if the bot is a good skilled bot and aim-at-the-body if the bot is a newbie)

--------------------------------------------------
04/11/01 at 00:55:08  Reply by: William (william@botepidemic.com)
--------------------------------------------------
clarification and comment:
I meant to say I did some AI work different from bot programming next to a full-time day job that has nothing to do with AI, but nevertheless is great.

There's a big difference between doing AI for a hobby, and doing AI full-time for a job. In the latter case, you'll have to develop AI that fits in a game design that most likely was defined without you. You are also responsible for the destructible crate "AI", chicken and cow "AI", and changing the weapon animation sequence "AI" once more.
The AI you develop is should stay within a memory budget, and not cause slowdowns on annoyingly old hardware.
It also supposed to be on time, to be bug free, and to work around known bugs in other parts of the engine. 

William

--------------------------------------------------
04/11/01 at 12:37:24  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
Yeah that does kind of suck, although it is fun to look at the cockroach AI included in Half-Life :)

