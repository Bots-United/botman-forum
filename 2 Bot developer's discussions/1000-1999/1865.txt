--------------------------------------------------
Subject: its an easy question, so just click me!
--------------------------------------------------
06/24/01 at 09:20:00  Posted by: Mr_BLonDe (george_s_inger@yahoo.com)
--------------------------------------------------
OK, ive made some changes to the bot source to fit my needs.  ive also put ALL the files in the bot #10 source code in with my sourcecode\dlls section.  and i DO use MINGW32.  so whenever i compile my dll it goes from bmodels to cbase in the dos window.  so it doesn't compile my new entities (the bots).  then at the end of my proccess window.  it has an error for every bot reference in the multiplayer_gamerules,player.cpp and player.h etc.. everything that has to do with the bots that would compile normally.  THE QUESTION IS>>>>

how do i make it where when i compile the dll it also reads the bot_combat,bot,bot_camera etc...?????

--------------------------------------------------
06/24/01 at 10:56:27  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
You need to add the bot .cpp files to the Makefile.  Edit the Makefile using Notepad and add bot.o, bot_combat.o, and bot_cam.o after the xen.o entry.

botman

--------------------------------------------------
06/24/01 at 11:00:04  Reply by: Mr_BLonDe (george_s_inger@yahoo.com)
--------------------------------------------------
extdll.h \
      vector.h ../common/const.h ../common/in_buttons.h \
      ../engine/progdefs.h ../engine/edict.h ../engine/eiface.h \
      ../engine/custom.h ../common/crc.h ../common/cvardef.h 


see all that complicating stuff underneath! do i have to add anything like that too?

--------------------------------------------------
06/24/01 at 11:04:52  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
No, you don't have to change the list of dependancies unless you want to.  The dependancy list lets MingW32 know which .cpp files need to be recompiled when you modify a .h file that gets included in one of the .cpp files.

You can learn about the make dependancy rules by downloading the documentation for make from any of the Linux web sites that have gnu documentation (or from www.gnu.org).

If you don't change the dependancy rules then you should remember to use "make clean" and then "make" whenever you change a .h file (just to make sure that any effected .cpp files get recompiled).  If you don't do this you can create VERY strange bugs when one object file (.o) uses one version of the .h structures or classes and a different object file uses a different version of the structures or classes.

botman

--------------------------------------------------
06/24/01 at 11:07:38  Reply by: Mr_BLonDe (george_s_inger@yahoo.com)
--------------------------------------------------
thnx botman your always hear for us newbies :-)

ill try your suggestions.

