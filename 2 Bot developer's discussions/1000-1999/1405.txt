--------------------------------------------------
Subject: any alternatives to recursive functions... ???
--------------------------------------------------
03/20/01 at 13:42:05  Posted by: Cheesemonster!!! (paul.murphy@ntlworld.com)
--------------------------------------------------
I'm having trouble with calling many functions all over the place and then as you would know, things are prone to crash! :(

Atm, Im working on boolean functions, especially that botheadtowardwaypoint function. I've basically got an if statement where it has something like... (damn psuedocode eh)...

if the length between bot origin and nearest waypoint origin is less than a constant value of 32 then return TRUE.

else return FALSE.

I've already stucksomethings like

If waypoint flag is W_FL_BUTTON (for example)
 BotPushButton(pBot)

Now cant I do something a little different? Ive noticed in the source code in boolean functions you have if BOOLEANFUNCTION == TRUE { blah blah...
then it does everything...

So could I make my own boolean function that determines whether its next to a button (For example :) ) and then somewhere in the bot head toward waypoint function, or wherever (if it is somewhere else then please tell me) I put , If BotFindButton==TRUE then Press button--- or something....??

--------------------------------------------------
03/23/01 at 16:58:21  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
Yes you can make your own functions! It is much better to make your own then put them all in their own files to make it easier to port to new templates. I made a function which lets the bots look for and press a button, but I have not released that version of my source yet. You can see examples of how to use the true and false stuff in my source code, get it at www.teambot.net

The functions are in teambot_navigate.cpp. And you shouldn't just say "it's crashing because I'm calling too many functions". Try and find out where the crash is occuring (get the bots to say what functions they are in, or write this to a text file). You should always try and squash each bug as soon as it appears, otherwise you will be mad when u have put some cool stuff into your bots but it always crashes. Always make sure everything works before moving on otherwise it will be very complicated finding the bug (trust me :P  I never test my bots enough when adding in new stuff. I usually just play for 2/3 minutes when I should really play a few rounds)

--------------------------------------------------
03/23/01 at 20:29:33  Reply by: Clean (botmans@xlat.cjb.net)
--------------------------------------------------
Please try not using recursion in any AI thought process unless it may terminate upon a condition that is not too far away or use a simple loop to process a group of instructions and check for events like on a new frame. The latter is the better way to go. You need to create a seperate thread for each AI or if neural networked, a seperate thread for each logical unit or whatever type of neural net implementation you feel like cooking up. Using events like under Win32 (CreateEvent) and threads, you may safely continue in your while loop without fearing that you may call your bot too many times per second giving it an extra edge over human players.


