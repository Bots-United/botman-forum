--------------------------------------------------
Subject: Using the MSVC Debugger in Counter-Strike
--------------------------------------------------
03/07/01 at 13:39:54  Posted by: botman (botman@mailandnews.com)
--------------------------------------------------
Here's an interesting thing...

You can't use the Microsoft Visual C++ debugger with a listen server on Counter-Strike because you get kicked out back to the desktop.  However you CAN use the Microsoft Visual C++ debugger on a dedicated server running Counter-Strike.

Just change the "Project->Settings->Debug", "Executable for debug session:" to "C:\SIERRA\Half-Life\hlds.exe", set up the "Working directory:" as "C:\SIERRA\Half-Life", and change the "Program arguments:" to "-game cstrike +maxplayers 8 +map cs_assault -nomaster +sv_lan 1" (or something similar based on the number of players and map you want to start with).

Then use "Build->Start Debug->Go" to execute the dedicated server.

Then create a shortcut to hl.exe and use this as the "Target:" line...

C:\SIERRA\Half-Life\hl.exe -console -nomaster +sv_lan 1 +maxplayer 8 +ip_clientport 27099

Just go to "Multiplayer" then "LAN game" and you should see your dedicated server running on your machine.  Just connect to it (you don't even have to use the "Custom game" menu to switch to Counter-Strike first, it will do it automatically when you connect to the server).

Don't forget to put the "+ip_clientport 27099" in the command line otherwise you won't be able to start Half-Life running because the default TCP/IP port 27015 will already be in use.

Set your breakpoints where you want them and the dedicated server will stop when those breakpoints are reached.

Pretty cool huh?

botman

--------------------------------------------------
03/07/01 at 14:39:22  Reply by: jldailey (jldailey@uchicago.edu)
--------------------------------------------------
If you add '+connect <YourIP>:27015' to your hl shortcut, you dont have to mung with menus...
:)

--------------------------------------------------
03/08/01 at 18:42:07  Reply by: bigjesus (holybigjesus@hotmail.com)
--------------------------------------------------
Damn thats nice to hear but Ive already been doing this...lol!

--------------------------------------------------
03/08/01 at 22:49:10  Reply by: jldailey (jldailey@uchicago.edu)
--------------------------------------------------
So the only problem i have with this solution now is that, net clients (i.e. ME) are not allowed to run bot commands... fat lot of good it does me when i cant run anything from a console... 

--------------------------------------------------
03/09/01 at 04:45:10  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
You can if you modify the ClientCommand() code to allow network clients to execute commands.  This line prevents clients from executing commands on a dedicated server...
code:
   if ((gpGlobals->deathmatch) && (!IS_DEDICATED_SERVER()) &&
       (pEntity == listenserver_edict))
   {


Just comment it out (and the matching closing bracket).

Don't forget to uncomment it before releasing your bot otherwise clients can add bots on a dedicated server (filling up all the client slots).

botman

--------------------------------------------------
03/09/01 at 17:38:54  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
What does the 'nomaster' bit do??

--------------------------------------------------
03/09/01 at 18:53:41  Reply by: jldailey (jldailey@uchicago.edu)
--------------------------------------------------
nomaster tells the server not to try to register itself with any master servers...

--------------------------------------------------
03/10/01 at 01:49:30  Reply by: ReDucTor[FGW] (sjdtmv@globalfreeway,com.au)
--------------------------------------------------
+connect 127.0.0.1:27015

Will connect to you to your computer thro the port 27015 :-)

