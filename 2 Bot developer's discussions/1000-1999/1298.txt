--------------------------------------------------
Subject: Open idea -- Accurate skill levels
--------------------------------------------------
03/02/01 at 10:38:56  Posted by: ExecutionStyle (c_brennan@hotmail.com)
--------------------------------------------------
Hi all, since this forum is an active place where people are actually working on bots, I figure it's a good place to share my ideas.  In the spirit of open source, I'll be posting ideas I think might help others make their bots better, so I'll call them open ideas.  Enough blabbering...  

----------------------------
Accurate skill levels

To make players of all levels enjoy our bots, we try to make the smartest possible bot to challenge the best players, then we make a way to dumb it down if it's too hard.  

Most bots use a similar method to implement skill levels: parameters are used to throw off a bot's aim, reaction time, path choice and so on by a given amount depending on the bot's skill level.  The problem with this approach is that it doesn't affect the bot's relative abilities to do different things.  What I mean is that a lower skilled bot may have it's aim, movement, and reaction time crippled compared to a higher skilled bot, but it can still run around a corner, react to an enemy, and shoot all at the same time.  Real human newbies can't do too many things at once, so the bots get an unfair advantage.

A way around this is to take every action a bot can do and describe it in terms of how much focus it takes to do it in "focus points".  For example, it takes less focus to run forward through a room than it does to aim for an enemy who is on a rooftop a few hundred yards away.  A chart of these actions would look something like this:


focus points    action
------------    ------
2               walk forward
5               run forward
10              aim at enemy
10              shoot at enemy
5               find cover
5               examine ground for weapons
5               identify weapon on ground


At each decision frame, a bot selects the best actions it can do based on its focus points.  

To visualize this, imagine a newbie bot has 10 focus points, and an expert has 50.  If they run into the same room, this is what happens:

the newbie bot is running so it's using 5 focus points.  It can't aim or shoot, but it can 'see' where there is cover in the room and if there are weapons on the ground.  The expert bot is also running, but it has 45 focus points left over, so it can keep running, find cover in the room, notice there is a better gun on the ground, and aim and shoot at the enemy, all in the same decision frame.

The next frame, the newbie stops running and aims, meanwhile it is being shot at.  The frame after, it gets a shot or two in because the aim action is interrupted by the shoot action (due to being fired at). The newbie sprays leads and dies while praying :o)

To make things even better, actions could be further divided so that say aiming at the enemy is 10 focus points but if you have 10 spare focus points, you can pump them into the aim function as extra and aim at the head instead.  This way intermediate bots would aim for the body, and l33t bastards would pick your head off like a melon.

----------------------------

Ok, hope that was clear.  If not, ask away and I'll post replies.  Any comments or suggestions are appreciated too cause they'll be used in my bot if they apply :o)

-Carl


--------------------------------------------------
03/02/01 at 10:51:04  Reply by: William (william@botepidemic.com)
--------------------------------------------------
great idea! 
you'll find something similar (and inspiring as well) in:
- Gladiator bot for Q2, and Quake 3 Arena bot:
http://www.botepidemic.com/gladiator/editing/characteristics.html

- http://www.cs.nwu.edu/~rob/publications/
see 'Game Agent Control using Parallel Behaviors'

William


--------------------------------------------------
03/02/01 at 12:11:29  Reply by: ExecutionStyle (c_brennan@hotmail.com)
--------------------------------------------------
Thanks for the links.  The second one was very interesting, especially the filtering and inhibition / subsumption functions.  That'll save me some thinking time :o)  

Wrt the first link though, the parameters for the gladiator bot may be extensive, but they're still hard-coded parameters for each case the bot might run into, which is exactly what I'm trying to avoid :o)  

Hopefully I'll post something that hasn't already been thought of soon ;o)  hehehehe maybe not though.  

-Carl

--------------------------------------------------
03/02/01 at 14:47:49  Reply by: diabolik (none@none.com)
--------------------------------------------------
Execution Style - if you're making a bot, i cant wait to play with it :)

--------------------------------------------------
03/03/01 at 05:44:47  Reply by: theimann (tobias.heimann@cl.cam.ac.uk)
--------------------------------------------------
The skill level idea is great, you are right with your observation of unskilled human players ( there's an enemy, huh! now wait, calm down, try to aim :-) ). Sounds like a good extension to the parameter skill system, especially because it fits in great with the stuff William linked to. If you limited the maximum number of points the goalfinder described in the paper could reach ( assuming you are using parallel actions as well ) you've got pretty much what you were thinking about...

Tobias

