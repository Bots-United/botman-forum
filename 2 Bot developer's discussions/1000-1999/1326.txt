--------------------------------------------------
Subject: Mirroring the world??!!!!!!!!
--------------------------------------------------
03/06/01 at 12:01:56  Posted by: pikachu (emperorstuart@hotmail.com)
--------------------------------------------------
When i was chatting on #hl_coding, i found something...
(Some of the non-essential stuff has been cut out)
QUOTE:

<|TOM|> Look in entity.cpp
<|TOM|> there is a test
<|TOM|> called movemodel
<|TOM|> or summut
<|TOM|> it places another model of what ur looking at on top of the model
<|TOM|> AND it works for the world
<MangaMan> hmm
<MangaMan> wow
<|TOM|> You can have two worlds one on top of each other =)
<MangaMan> can someone make an example?
<|TOM|> with what?
<MangaMan> mirrors
<|TOM|> dno
<|TOM|> but it looks easy
<|TOM|> it uses efx.api
<|TOM|> for some reason, the temp model doesnt have to be a model, it can also be the world
<MangaMan> lol
<|TOM|> The function doest actually work, I just managed to change it and it kinda worked =)
<|TOM|> kinda as in, insted of making another entity of what ur looking at, it makes anothe world!
<MangaMan> lol
<MangaMan> how fast is it?
<|TOM|> fast?
<MangaMan> yeah
<MangaMan> ...What framerate do you get looking into the mirror?
<|TOM|> I aint made a mirror, at the moment I was just screwing around and managed to get two worlds
<|TOM|> look in entity.cpp
<|TOM|> void TraceModel( void )
<|TOM|> the extern hitmodel doesnt work
<MangaMan> ...so how do you fix it?
<|TOM|> so u have to redefine it as extern in a header
<MangaMan> oh
<MangaMan> ...so how could you use it?
<|TOM|> a bit below is an update function
<|TOM|> void DLLEXPORT HUD_CreateEntities( void )
<|TOM|> just call TraceModel(); in it



Hmm... Has anyone tried this? It'd be cool mirroring the world :D

--------------------------------------------------
03/06/01 at 13:07:51  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
It looks like all this does is create 8 copies of a model around a player (it goes from 0 to 2 on the X and Y axis and skips X=1, Y=1).  It doesn't seem to have anything to do with mirroring.

Perhaps Valve was using this when they were playing with the parmeteric model animation.  The only thing I can see it being used for is surrounding the player with 8 copies of a model.

botman

--------------------------------------------------
03/06/01 at 13:10:04  Reply by: ExecutionStyle (c_brennan@hotmail.com)
--------------------------------------------------
I saw quite a few comments about mirrors on the wavelength forum.  There was a lot of mention of a mod for Half-Life called Opera (haven't seen it, isn't out yet) that has mirrors in it.  You could look there for more info.  

 -Carl

--------------------------------------------------
03/07/01 at 04:37:48  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
Mirrors can be done in a way similar to how they are done in Duke Nukem 3D.  Create a non-breakable window on a wall.  Create a BIG room on the other side of the window with mirrored copies of the textures in the first room.  When a player enters the room, create a model on the other side of the glass with the same model as the player.

The only problem with this is the models left and right sides aren't really mirrored (like they would be in a mirror).  The gun will be held on the opposite side of the body (it should look like the gun is being held in the left hand if the player has the gun in the right hand).

botman

--------------------------------------------------
03/10/01 at 09:06:09  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
I thought the mirrors in Duke Nukem were real, oh well... :)

