--------------------------------------------------
Subject: Pulling a botman, for Return to Castle Wolfenstein
--------------------------------------------------
12/03/02 at 13:54:47  Posted by: DarkYouth (darkyouth@planetannihilation.com)
--------------------------------------------------
Hi there folks, long time no see. I've been busy with other gaming pursuits lately, with PlanetAnnihilation.com taking over my gaming life almost entirely. First person shooter wise, it's a little different. Besides squeezing in the odd round of Counter-Strike and tinkering with AI work for CS for 10 minutes a week, I've been playing Natural Selection and Return to Castle Wolfenstein.

An idea has occured to me that could lead to bots being implemented in the RtCW multiplayer game, providing I can figure out exactly what functions need passing back and forth from the engine to the mod code.

The thing is, this would probably work too I imagine. The reason for this is that RtCW, rather than using the cross-platform .qvm versions of files that Quake III Arena engines support, the developers have left the .dll file exposed for my evil eyes to pry, I'm going to try and run a dumpbin on it later to see where the exports match up to a compile of the Quake III Arena SDK, to find common functions.

If anyone here has any comments, suggestions, or experience in coding Quake III Arena modifications & Win32 programming, I'd appreciate any feedback you might have on the matter.

The project as I see it will involve three phases:-

(1) Analysis of the Quake III Arena platform and similiarities to RtCW

(2) Creation of a HPB-Bot style bot framework, pretty much containing all the same interface functions (A traceline/hull interface, entity finding, etc) that we've grown to rely on for any and all half-life bot modding. The code for this, if I/we can do it will be open source.

(3) Creation of a bot based upon this template, after all, spawning a bot is a technical challenge, but AI is a conceptual challenge.

