--------------------------------------------------
Subject: Bot VGUI menu detection thingummys...
--------------------------------------------------
08/14/01 at 18:56:48  Posted by: Wonderbread (chriscz@mediaone.net)
--------------------------------------------------
Ehm... I'm making an Opera bot, but these things just don't make sense, like this:
// This message is sent when the TFC VGUI menu is displayed.
void BotClient_TFC_VGUI(void *p, int bot_index)
{
   if ((*(int *)p) == 2)  // is it a team select menu?

      bots[bot_index].start_action = MSG_TFC_TEAM_SELECT;

   else if ((*(int *)p) == 3)  // is is a class selection menu?

      bots[bot_index].start_action = MSG_TFC_CLASS_SELECT;
}

How does it find the type of data it wants by doing else if ((*(int *)p) == 3)   or whatever? I don't understand which integer it multiplies times...p?... to get 3... What is P? Maybe I need to study my if-then circumstances from my SAMS book again, I'm a bit rusty on C++ coding haven't done it for months... but a quick review from you dudes would be really nice :)

--------------------------------------------------
08/15/01 at 00:00:46  Reply by: stefanhendriks (stefan@counter-strike.net)
--------------------------------------------------
*p is a pointer in this case, not a multiplier. As far as i can tell, the function BotClient_TFC_VGUI will be called, and has information about the 'type of message' or 'part of message' whatever you want to call it, for that menu. You need to make an INT out of this 'VOID' (as you dont know what the message will send of data, a VOID will accept all data, but you have to turn it into the right data for you to read it out). So actually Botman makes a 'integer' out of the input and checks if its 2, if not, then its not a team select menu. 

I hope i said this right :D

--------------------------------------------------
08/15/01 at 04:11:14  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
Right, *p means "what p points to", not "times p".

Read the section in your book on pointers in C and C++ again.

botman

