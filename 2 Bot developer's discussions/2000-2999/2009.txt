--------------------------------------------------
Subject: Just asking again
--------------------------------------------------
07/21/01 at 06:49:54  Posted by: Pembunuh (yip_omar@hotmail.com)
--------------------------------------------------
hi..

Can anyone explain this:

typedef struct path {
   short int index[MAX_PATH_INDEX];  // indexes of waypoints (index -1 means not used)
   struct path *next;   // link to next structure
} PATH;

My question is, what does this 
>>
short int index[MAX_PATH_INDEX];  // indexes 

means? THanks


--------------------------------------------------
07/21/01 at 08:20:10  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
The path structure for the HPB bot template code is a linked list of waypoint indexes that are reachable from a specific waypoint (i.e. a path).

The path.index array contains up to 4 indexes of waypoints that are reachable from the current waypoint.  For example if you can get to waypoint #34, waypoint #51, and waypoint #17 from the current waypoint, the path.index array would contain [ 34, 51, 17, -1 ].  (-1 is used to indicate that the array position is unused since -1 is NOT a valid waypoint index).

As another example, if you can get to waypoint #19, waypoint #27, waypoint #33, waypoint #56, wayponit #91, and waypoint #45 from the current waypoint, you would have 2 path structures (since you have more than 4 waypoints).  The first path structure would be linked to the second one (i.e. if the first path structure is path1 and the second path structure is path2 then path1.next = path2).  You need to understand how linked lists work to understand this concept.  The path1.index array would be [ 19, 27, 33, 56 ] and path2.index array would be [ 91, 45, -1, -1 ].

These path structures are created dynamically whenever a waypoint is added and freed up when a waypoint is deleted.

botman

