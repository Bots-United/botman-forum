--------------------------------------------------
Subject: More realistic human aim
--------------------------------------------------
01/24/02 at 18:10:52  Posted by: Ghoul (oneeyedghoul@aol.com)
--------------------------------------------------
Well, I got myself the normal 5 bot skills.  1 being perfect aim, 5 being exteremely horrible (as in it couldn't it you from 64 units away).  Now, currently, to create this kind of aim, a random vector is added to it bots aiming.  This produces the right effect, but when fighting the bots, they spaz out (due to the large vector cone) and its, to say, scary looking.  I was wondering if anyone could give me a clue on how to do an aiming system where the bots weren't to eratic, Like adding 1, 0, or -1 to all x y z properties of the random vector, then limiting it so if any of the x y x properties is near its "limit" (say 90 to -90) then it won't subtract 1 or add 1.  Anyway, just wanted to know what you people thought.  Thanks!

--------------------------------------------------
01/24/02 at 19:23:34  Reply by: PM (baty.pm@libertysurf.fr)
--------------------------------------------------
See the thread "Bot's aiming" initiated by BlackJ@CK a few time ago. I posted some piece of code that you may find interesting.


--------------------------------------------------
01/25/02 at 05:01:57  Reply by: Cheesemonster!!! (paul.murphy@ntlworld.com)
--------------------------------------------------
you can store the bots aim offset or aim in a vector inside bot_t. You can also add a timer so it will update every second or two. What it will do is, instead of calling Bot
BodyTarget, and if you have an aim offset stored then use that instead. I've done that for my bot (link in sig!) but I'm going to re-do it a bit :)

--------------------------------------------------
01/25/02 at 13:02:00  Reply by: Ghoul (oneeyedghoul@aol.com)
--------------------------------------------------
Yes, but would my method work at all?

--------------------------------------------------
01/25/02 at 15:59:42  Reply by: Cheesemonster!!! (paul.murphy@ntlworld.com)
--------------------------------------------------
yes but its going to be quite hard in my case to implement it :)

example, you'll need to change any code where the bot changes its angle to something like..

pBot->wish_angles = whatever

// Moves 2 degrees each frame
if( pBot->v.v_angle.x > pBot->wish_angles.x ) { pBot->v.v_angle.x =- 2 } 
if( pBot->v.v_angle.x < pBot->wish_angles.x ) { pBot->v.v_angle.x =+ 2 } 

and do the same for y... at least I think thats an easy type hard way to do it hehe

[modified on 01/25/02 at 15:59:42]
