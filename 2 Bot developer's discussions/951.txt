--------------------------------------------------
Subject: linux port
--------------------------------------------------
12/28/00 at 13:27:30  Posted by: Spyro (theoddbot@hotmail.com)
--------------------------------------------------
Hi,

I'm in the process of doing a linux port of my bot, but the compiler sticks at this in h_export.cpp:


#ifndef __linux__
void DLLEXPORT GiveFnptrsToDll( enginefuncs_t* pengfuncsFromEngine, globalvars_t *pGlobals )
#else
extern "C" DLLEXPORT GiveFnptrsToDll( enginefuncs_t* pengfuncsFromEngine, globalvars_t *pGlobals )
#endif


it doesn't like the extern "C" business, so i changed in to void and it worked fine. The only thing is, I can't test it at all, as I am lacking hlds.

any help would be appreciated,

--------------------------------------------------
12/28/00 at 14:02:30  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
extern "C" is a standard feature in any C++ compiler.  Which compiler are you using (and which version).  Also which version of Linux (and version) are you using to compile the modules?

botman

--------------------------------------------------
12/28/00 at 14:06:11  Reply by: Spyro (theoddbot@hotmail.com)
--------------------------------------------------
ok, i using redhat 7 (the latest)

and the default compiler which i think is gcc

--------------------------------------------------
12/28/00 at 14:06:51  Reply by: Spyro (theoddbot@hotmail.com)
--------------------------------------------------
oh yeah,

the error message was somthing like:

function must have a return type

--------------------------------------------------
12/28/00 at 16:43:49  Reply by: eLiTe (ali@elitegamer.fsnet.co.uk)
--------------------------------------------------
How do u get HL on Linux? Can u download the executable for free?

I just started using Linux last week!! It's cool, but I can't do much with it until I get my new PC fixed, grrrrrrrrrrrrrrrrr

--------------------------------------------------
12/28/00 at 23:58:00  Reply by: dannywent (dannywent@hotmail.com)
--------------------------------------------------
yeah, you can download it for free, but i'm about 99% sure its only for dedicated servers, so you can't actually play on it, unless you connect to it from another pc on a LAN.  the file should be on any HL site, int the *.tar.gz form, which is a packaged form that you have to "unzip"

Dan

--------------------------------------------------
12/29/00 at 03:33:38  Reply by: pikachu (emperorstuart@hotmail.com)
--------------------------------------------------
The only was to play the half-life client on linux would be to emulate all the api's it uses.


--------------------------------------------------
12/29/00 at 06:02:02  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
When you transfer the source code files to Linux make SURE you set the transfer mode to ASCII when using FTP.  If you don't transfer the files as ASCII you will get various nasty messages from the compiler (most of which will be nonsense).

botman

--------------------------------------------------
12/29/00 at 13:44:16  Reply by: Spyro (theoddbot@hotmail.com)
--------------------------------------------------
Hi,

I can edit the files fine. I'll have another look at it later.

I got the files into linux by mounting a vfat drive and using cp to copy them

-Spyro

--------------------------------------------------
12/30/00 at 06:13:59  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
The editor may be hiding the CR/LF verses NL problem in the text files.  The compiler won't be able to handle CR/LF.  I would bet that the copy to a vfat partition would use a binary copy.

Try using FTP in ASCII mode and see if your problems go away.

botman

--------------------------------------------------
12/30/00 at 13:59:20  Reply by: Spyro (theoddbot@hotmail.com)
--------------------------------------------------
ok,

if it was the \r\n that was doing it, how come it works fine when I change 'extern "C"' to 'void'. 

I can save all the files in my editor in unix format and see if that helps.

Also, it compiled fine, and then later on, I realised that I hadn't added some new files that I had created to the linux makefile, It hadn't compiled them, other files refence them, yet it build the .so fine.


Also also, what is the difference between the win32 version of half-life and the linux server edition. Is it just an exectuable and a library, that i would add to the half-life directroy. If this is the case, could someone mail the new files to pcms@iprimus.com.au.

thanks,

--------------------------------------------------
12/31/00 at 05:00:12  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
"how come it works fine when I change 'extern "C"' to 'void'."

Because when you edited the file on your Linux box, the editor probably converted all the CR/LF pairs to newline when you saved the modified file.

"I realised that I hadn't added some new files that I had created to the linux makefile, It hadn't compiled them, other files refence them, yet it build the .so fine."

If you have references to variables or functions that don't exist, the linker should complain that it can find that variable/function.

The only difference between a MOD for Linux and a MOD for Win32 is that you need the .so file for Linux and you need the .dll file for Win32.  All other files (.wad, .cfg, .pak, .mdl, etc.) are exactly the same for Linux and Win32.  You could even distribute both the .so and .dll file in the same .zip file and have one download that will run on either type of OS (as some bot authors have done).

botman

--------------------------------------------------
12/31/00 at 13:46:43  Reply by: Spyro (theoddbot@hotmail.com)
--------------------------------------------------
Hi,

When I changed it back to extern "C" it complained again. Is there a good website on c syntax, etc that I could look at.

Could someone please tell me where I could get the .so files from, or email them to me :( . sniff. please.



--------------------------------------------------
12/31/00 at 15:16:40  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
"Could someone please tell me where I could get the .so files from"

The .so file is what you are trying to build.  After everything compiles the compiler/linker will build the .so file which gets loaded by the Half-Life engine.

botman

--------------------------------------------------
01/01/01 at 02:22:36  Reply by: Spyro (theoddbot@hotmail.com)
--------------------------------------------------
Hi,

not that .so file. the hl_i386.so, tfc_i386.so, won_i386.so etc etc, so i don't have to dl all the models and maps and stuff just so i can test my bot



--------------------------------------------------
01/01/01 at 05:49:28  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
Didn't you download hlds_l?  If not, you should do that since the Half-Life executables for Linux aren't the same as the Windows ones.  Also there is a linux_readme.txt file that explains how to set up the shared libraries when you install HLDS for Linux.  Here's a link to the download...

http://www.fileplanet.com/index.asp?section=208&file=51284

botman

--------------------------------------------------
01/02/01 at 05:08:54  Reply by: Spyro (theoddbot@hotmail.com)
--------------------------------------------------
Hi,

Thanks for the link botman, but i was wondering if there was a way that i could run a linux server without d/l the 94.7mb file, since, like you said, I already have most of the files in the standard half-life install. 

My modem saw the size of hlds_l and went in the corner and shot itself.

-Spyro

--------------------------------------------------
01/02/01 at 05:11:29  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
I was talking about the differences in a MOD for Win32 and a MOD for Linux (the only difference is the .dll file instead of the .so file in the dlls directory).

You will still need to download the entire hlds_l compressed tar file for Linux since the dedicated server code is not the same on Win32 as it is on Linux (you don't already have the Linux binaries on your Windows machine).

botman

--------------------------------------------------
01/02/01 at 05:20:44  Reply by: Spyro (theoddbot@hotmail.com)
--------------------------------------------------
Hi,

Thats just what i was afraid of. oh well.

-Spyro

--------------------------------------------------
01/04/01 at 14:53:12  Reply by: Spyro (theoddbot@hotmail.com)
--------------------------------------------------
Hi,

Got hlds_l.
The bot it compiles, what i did was add void DLLEXPORT between 'extern "C" ' and GiveFnptrsToDLL.

So now, when I try to load it into hlds_l i get 

'could not load library: undefined symbol: sin '

I assume it means a call to the library function sin but why isn't it linked correctly?

any help/ideas appreciated,

-Spyro

--------------------------------------------------
01/05/01 at 04:41:44  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
You must be using the sine function somewhere, sin(), but that should be found in the libm.so shared library (math library), which should be in your /usr/lib directory.

Which makefile are you using?  You can try to get rid of the "-shared" option where it links the .so file to use static libraries instead of shared libraries but the .so file will become larger.

botman

--------------------------------------------------
01/05/01 at 14:57:12  Reply by: Spyro (theoddbot@hotmail.com)
--------------------------------------------------
Hi,

yeah, I am using the sin function. I'm using the hpb template 1 makefile. should i switch to the v 2.0 and see if that makes any difference.

-Spyro

--------------------------------------------------
01/06/01 at 03:43:11  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
Using the newer version of the template source code won't get rid of your problem.  Did you try removing the "-shared" option in the link command?

botman

--------------------------------------------------
01/06/01 at 14:12:37  Reply by: Spyro (theoddbot@hotmail.com)
--------------------------------------------------
Hi,

I got it working. I kept the shared option and compiled with g++ instead of gcc. This solved all of the problems i've talked about above.

Thanks for all your help,

-Spyro

--------------------------------------------------
01/07/01 at 05:22:45  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
If you use g++ to compile the .so file you may have to provide the C++ shared libraries with your bot distribution (since people may not have the C++ compiler and libraries installed on their Linux box).  The Phineas Bot had this problem on the original Linux version that Leon provided.  You may want to e-mail him about details on this.  His e-mail address is on his web site (see my Links page).

botman

