--------------------------------------------------
Subject: angle problems, again!!!
--------------------------------------------------
04/02/02 at 10:49:23  Posted by: PM (baty.pm@libertysurf.fr)
--------------------------------------------------
damn sh*t sh*t sh*t goddamn sh*it I'm getting angle overflow engine freezes again!!!

Am I wrong since the start or pEdict->v.v_angle (head angles) and pEdict->v.angles (body angles) have to be kept in a -180/180 range ? Am I right ? Tell me I am!!


--------------------------------------------------
04/02/02 at 11:46:45  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
The engine keeps some entity angles between 0 and 360 degrees, other angles are between -180 and 180.  Don't ask me which is which.  The engine seems to accept things between -360 and 360 so either one should be valid.  You only get into problems when you go below -360 or above 360.

I'm not sure why the engine would "freeze" for angles outside this range.  You might get some wierd effects or wierd movement (like you get when you use angles above 360), but I can't think of anything that would cause the engine to freeze.

How do you know it is angles that is causing the problem?  Are you printing them out or viewing them in the debugger?  Perhaps there is something else going on.

botman

--------------------------------------------------
04/02/02 at 13:36:54  Reply by: PM (baty.pm@libertysurf.fr)
--------------------------------------------------
I know it is. It seems like I'm a subscriber for each and every possible and imaginable angle bug. I'm used to such symptoms!! Seems like the engine freezes for very large value of angle, just like if it would loop trying to set it in bounds by small decrements, too small to actually do anything to the variable. I just can't print out each and every angle that is used in the game simultaneously so this is just my opinion though... :-(



--------------------------------------------------
04/02/02 at 14:16:21  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
If you use the "Ctrl-Break" sequence while running it under the debugger, it will show you where the program is "hung" (in an infinite loop).  You can then use the View->Call Stack function to see what function in your code was the last one to call the engine (and you can examine the value of variables within your code as well).

botman

