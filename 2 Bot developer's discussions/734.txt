--------------------------------------------------
Subject: linux
--------------------------------------------------
11/30/00 at 08:13:23  Posted by: ARES (j.sdubbelboer@freeler.nl)
--------------------------------------------------
What do I need to do make my bot compatible for linux.

--------------------------------------------------
11/30/00 at 08:34:51  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
If you are using the HPB bot template source to start from it will already work in Linux (well, once you compile it on a Linux box it will).

The differences between Win32 DLLs and Linux shared libraries (.so files) are mostly handled in h_export.cpp where it loads the MOD.

The only other differences you need to be aware of are Standard C functions that might exist under Win32 but not under Linux (things like stricmp or istrcmp, can't remember which one).  Leon Hartwig includes a makefile with the Standard SDK that shows how to build a Linux .so file from the Valve SDK source.  You can use my "makefile_linux" included with the HPB bot template source to build the HPB bot .so file.  Just rename "makefile_linux" to "makefile" and run make.

Obviously you will need access to a Linux box with the gcc C++ compiler installed on it to build the .so file and will want to install the Half-Life Linux dedicated server (along with whatever MOD your bot is for) on the Linux machine so that you can test your bot running on a Linux server.

One other thing that you need to be aware of is that Linux uses forward slashes '/' in pathnames whereas MS-DOS and Windows uses backslashes '\'.  If you are building a path name to load a file (like for a waypoint file in the maps directory) make sure you specify the correct path separator for the operating system that your code is running on.  Again, look in the h_export.cpp file to see how I handle this for the DLL or .so MOD files.

botman

