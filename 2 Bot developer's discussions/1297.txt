--------------------------------------------------
Subject: Single and Multiple Line Comments
--------------------------------------------------
03/02/01 at 09:57:07  Posted by: Cloud34 (Cloud34@ignmail.com)
--------------------------------------------------
I am a student in high school learning C++, and I have a question about single line comments.  On one of the last programs I handed in, I lost many a marks for using // for each line on a multiple line comment, instead of using /* for use with multiple lines.  I lost the marks because it was "improper programming practice", yet when I look at the HPB bot code, it uses // for multiple line comments, and just about ecery other source code I've looked at.  My older brother in university, said that his professor uses // all the time and never used /*!  My question is, should I have lost marks?

--------------------------------------------------
03/02/01 at 11:02:12  Reply by: jldailey (jldailey@uchicago.edu)
--------------------------------------------------
there's a semantic debate surrounding this, and i think the issue here is that original ANSI definitions for C syntax require that whitespace (newlines, spaces, tabs etc.) make ABSOLUTELY NO difference for the way the code compiles and parses... but when you have // comments, you have to check for newlines to find the end of the comment (and the beginning of code), a big no no in the ANSI world... its become tolerated because it is simpler for small comments then having to tag the end of every one line comment, but single line comments of the // form are techincally bad grammar, even though most compilers support it...
at least, thats how i understand the issue... now, there's a whole seperate debate to be had about grading, surrounding the question of whether or not losing points was more helpful in your learning than say, a professor actually EXPLAINING why it is a bad thing to do... go figure, schools suck... 

--------------------------------------------------
03/02/01 at 12:13:31  Reply by: ExecutionStyle (c_brennan@hotmail.com)
--------------------------------------------------
Whether or not it's 'proper' to use /* */ for multi-line comments, your teacher was testing you on knowledge of what he taught.  If he said /* */ is what you do when you write a multline comment, he will be docking marks if you don't do it.  It seems unfair, but he has to come up with a standard marking scheme.

 -Carl

--------------------------------------------------
03/04/01 at 06:37:41  Reply by: Spartan (john@crickett.co.uk)
--------------------------------------------------
Travis,

Personally I'd object to your teacher if its a significant number of marks. It is common for *professional* coders to be _required_ NOT to use multiline comments. The reason for this is because there have been a number of times that people have forgotten to close a comment:

-- Start of file --
/* a multi line
 * comment
int main(void)
{
    return 0;
}
/* some more comments
*/
-- end of file --

resulting in the file effectively being empty.

or its been closed by a nested comment:

/* comment
 * some commented out code next possibly
int aFunc(void)
/* annother comment
 * spread over multi lines
 */ <- where it actully ends the comment

*/   <- where the comment is supposed to end

Ok these are poor examples but search the web (or newsgroup archieves for comp.lang.c or comp.lang.c++ and you'll find some better examples.

There are also readability issues... i.e. it's easier to spot multiple //'s rather than a widely spread out /* */ pair... remember not everyone has syntax colouring!

Regards, S

--------------------------------------------------
03/05/01 at 07:11:20  Reply by: Cloud34 (Cloud34@ignmail.com)
--------------------------------------------------
Well, thank you everyone for the feedback.  ButI must say another thing- my programming teacher doesn't exactly know c++ yet, he stays one day ahead of the class(a class of 7 ish people), and half of the class is way ahead of him(including me).  Thank you for your time :)

