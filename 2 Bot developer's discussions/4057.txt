--------------------------------------------------
Subject: question about vector
--------------------------------------------------
01/20/03 at 21:24:49  Posted by: MrE (ezamudin@tm.net.my)
--------------------------------------------------
How do we found out if a vector is inside a wall? Or hanging on air? 
All I want to know is if we have a random  vector, we can find out if this vector is reachable or not? How do I code that?
If this question sound stupid... well it is becoz I am a newbie in C++

[modified on 01/20/03 at 21:24:49]
--------------------------------------------------
01/20/03 at 21:36:47  Reply by: PM (pm@racc-ai.com)
--------------------------------------------------
In most of the 3D engines (including Half-Life), vectors can describe ABSOLUTE locations (i.e, the coordinates of a spot in the world) as well as RELATIVE offsets (i.e, what a vector is mathematically supposed to be).

Are you talking about absolute or relative locations ?

For pointing the contents of a spot in the world, there is the POINT_CONTENTS() function. It will return whether the point is located in water, or in open space, inside an entity or outside the map, or wherever.

For checking the reachability of a relative offset (e.g, starting from a point and going to another by checking if the line of sight is okay between both), there is the TRACE_LINE()... or if you're a l33t coder, the PVS stuff (which I don't recommend so far)


[modified on 01/20/03 at 21:36:47]
--------------------------------------------------
01/20/03 at 22:13:47  Reply by: MrE (ezamudin@tm.net.my)
--------------------------------------------------
Wow ... thanks for replying soo soon.:)
I believe I'm looking for the absolute vector...
I'm actually trying to make my bots to select a reach point, within say a 1000 unit, head there, analyze the situation, select another... until it reach it destination. the problem is I want to know if the selected vector is inside a wall.. I don't need the bot to see this point. The idea is that if I can continously shorten the distance I will eventually reach it. 

--------------------------------------------------
01/21/03 at 02:59:55  Reply by: @$3.1415rin (johannes@_-removeifnotavirus-_lampel.net)
--------------------------------------------------
QUOTE:
In most of the 3D engines (including Half-Life), vectors can describe ABSOLUTE locations (i.e, the coordinates of a spot in the world) as well as RELATIVE offsets (i.e, what a vector is mathematically supposed to be).




nipicking : vector are always relative, positions are just normal relative vectors to the fat zero in R3, the zero vector or how you may call it :D

@topicstrter : If you are a newbie in C++, you maybe consult these 'how do I learn C/C++' ...

--------------------------------------------------
01/21/03 at 05:49:02  Reply by: botman (botman@planethalflife.com)
--------------------------------------------------
There's a pretty nice tutorial on Vectors over at gamedev...

http://www.gamedev.net/reference/programming/features/vecmatprimer/

There's also MANY good tutorials on 3D geometry (vectors, planes, etc.) over at flipcode...

http://www.flipcode.com/geometry/

(I probably should add these to my "Links" page! ;D)

botman

[modified on 01/21/03 at 05:49:02]
--------------------------------------------------
01/21/03 at 18:07:47  Reply by: MrE (ezamudin@tm.net.my)
--------------------------------------------------
Thanks guys, the POINT_CONTENTS() function do the trick.... hehe, next time I check over all open s/codes first b4 I ask.
to Pierre-Marie Baty:
this the function that i'm looking for :
 UTIL_PointContents(Vector &vec) :P
topic can be close. 


