--------------------------------------------------
Subject: Open ideas -- path trails
--------------------------------------------------
03/05/01 at 06:28:22  Posted by: ExecutionStyle (c_brennan@hotmail.com)
--------------------------------------------------
-----------------------------
This idea relates to problem many bots have of seeing an enemy, firing a few rounds, then continuing merrily on to the next waypoint as if nothing happened.

Picture yourself next to a human playing counter-strike.  If you ask them which route they took to get where they are, they can tell you easily.  They would also know if they've seen an enemy in the last 20 seconds and if so which direction the last sighting was.

Without killing the CPU or hogging all the memory, we can get our bots to remember the most important things by keeping a trail of points that have been visited.  I liken it to the mouse trails that you can have follow along after your cursor.

Anyway, this trail should be a linked list with nodes that can store all the necessary information to record a significant event.  The reason I suggest a linked list is to allow deleting less important nodes even if they are in the middle of the list.  Each node should have an importance value that is calculated when it is recorded, i.e. a node recording an enemy sighting would have a highish value.  Each node's value should be changeable, to reflect the fact that if an enemy dies, it doesn't help much to remember where you last saw it.

-----------------------------

That's it for the basic description.  I'm sure we can have a lively conversation about the different things that could be recorded at nodes, or algorithms for pruning the list, or even a better structure to record the data.  

 -Carl

--------------------------------------------------
03/05/01 at 09:49:47  Reply by: Spartan (john@crickett.co.uk)
--------------------------------------------------
Sounds kind of like what id did in Quake2 so the monsters could chase a player... except the code as shipped didn't work iirc!

Have a look at std::priority_queue (part of the C++ Standard Library) it might be useful as an alternate to a linked list.

Regards, S

--------------------------------------------------
03/05/01 at 10:56:02  Reply by: botman (botman@mailandnews.com)
--------------------------------------------------
The Rho-Bot for Half-Life had the ability to keep heading toward the last known position of an enemy.  You might want to download it and take a look at the source code.  The executable won't work because it hasn't been updated to support Half-Life version 1.1.0.0 or higher.

http://www.gamershomepage.com/rhobot/

botman

--------------------------------------------------
03/05/01 at 11:14:26  Reply by: William (william@botepidemic.com)
--------------------------------------------------
Id indeed had the feature (using an 8 place circular buffer mapped on an array). A tiny error by Cash or Carmack disabled the feature.

I've been using a memory feature in CGF, where I have memory gradually dissappear in time when subsequent observations are absent, or restored when subsequent observations occur. Just a simple counter and decay function.
I use memory both to track threats, and to remember important environment events (such as the sound of a door being closed or opened).

Be careful taking short cuts with fragged opponents. Bots being able to know or see instantly whether they've killed their opponent are not realistic. I rather see them spending a few more rounds "just to sure".
Besides, the location of the dead body (CS sucks in this aspect by removing it rapidly) often is an important hint, enabling the AI to figure out the threat's likely position.
CGF takes "friendly corpes" into account when planning paths; it tries to avoid passing those locations.

William

